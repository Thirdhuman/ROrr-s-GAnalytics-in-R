if(year < 2005){
#No Replicate Weights (Pre-2005)
cpsasec_design <- svydesign(
weights = ~marsupwt,
data = cpsasec_df,
ids = ~1)} else {
# Replicate Weights (Post-2005)
cpsasec_design <- svrepdesign(
weights = ~ marsupwt ,
repweights = "pwwgt[1-9]" ,
type = "Fay" ,
rho = ( 1 - 1 / sqrt( 4 ) ) ,
data = cpsasec_df ,
combined.weights = TRUE)}
rm(cpsasec_df)
cpsasec_design$mse <- TRUE
cpsasec_design <- convey_prep( cpsasec_design )
#cpsasec_design <- update(cpsasec_design, a_numper = ifelse( h_numper > hunder18 ,h_numper-hunder18, h_numper))
cpsasec_design <- update(cpsasec_design,
#old_equiv_htotval = htotval/a_numper,
state_name=factor(gestfips,levels=c(1L,2L,4L,5L,6L,8L,9L,10L,11L,12L,13L,15L,16L,17L,18L,19L,20L,21L,22L,23L,24L,25L,26L,27L,28L,29L,30L,31L,32L,33L,34L,35L,36L,37L,38L,39L,40L,41L,42L,44L,45L,46L,47L,48L,49L,50L,51L,53L,54L,55L,56L),labels=c("Alabama","Alaska","Arizona","Arkansas","California","Colorado","Connecticut","Delaware","District of Columbia","Florida","Georgia","Hawaii","Idaho","Illinois","Indiana","Iowa","Kansas","Kentucky","Louisiana","Maine","Maryland","Massachusetts","Michigan","Minnesota","Mississippi","Missouri","Montana","Nebraska","Nevada","New Hampshire","New Jersey","New Mexico","New York","North Carolina","North Dakota","Ohio","Oklahoma","Oregon","Pennsylvania","Rhode Island","South Carolina","South Dakota","Tennessee","Texas","Utah","Vermont","Virginia","Washington","West Virginia","Wisconsin","Wyoming")),
metro_size = factor(gtcbsasz, levels=c(0L,2L,3L,4L,5L,6L,7L),labels=c("Not identified or nonmetropolitan","100,000 - 249,999","250,000 - 499,999",'500,000 - 999,999','1,000,000 - 2,499,999','2,500,000 - 4,999,999','5,000,000+')),
p_ptotval = ifelse(ptotval > 0, ptotval, 0),
p_htotval = ifelse(htotval > 0, htotval, 0),
equiv_htotval= ifelse(p_htotval > 0, p_htotval * (p_ptotval/p_htotval),0 ))
cpsasec_design <- update(cpsasec_design, metro_3p = ifelse(
gtcbsasz%in%0:1, "Not identified or nonmetropolitan",
ifelse(gtcbsasz%in%2:4, "100,000 - 999,999",
ifelse(gtcbsasz%in%5:7, "1,000,000+", "Not identified or nonmetropolitan"))))
output_gini  =svyby(~equiv_htotval, ~metro_3p, (cpsasec_design ), svygini)
output_gini <- as.data.frame(output_gini)
colnames(output_gini)[colnames(output_gini)=="gini"] <- "output_gini"
output_gini <- subset(output_gini, select = -c(se.equiv_htotval) )
output_atk =svyby(~equiv_htotval, ~state_name, subset(cpsasec_design ,equiv_htotval > 0), svyatk, epsilon = 1 ,na.rm.all= T)
output_atk <- as.data.frame(output_atk)
colnames(output_atk)[colnames(output_atk)=="atkinson"] <- "output_atk"
output_atk <- subset(output_atk, select = -c(se.equiv_htotval) )
# add year
print(year)
output_gini[ , "survey_year"] <- NA
(output_gini$survey_year <- as.numeric(year) - 1)
output_gini<-as.data.frame(output_gini)
print(output_gini)
output_atk[ , "survey_year"] <- NA
(output_atk$survey_year <- as.numeric(year) - 1)
(output_atk<-as.data.frame(output_atk))
print(output_atk)
# Loop back to beggining
if( year == 2005){
final_output_gini <- as.data.frame(output_gini)
final_output_atk <- as.data.frame(output_atk)
} else {
final_output_gini <-  rbind.fill(final_output_gini, output_gini)
final_output_atk <-  rbind.fill(final_output_atk, output_atk)
}
}
write.csv(final_output_gini, "gini_output20.csv")
write.csv(final_output_atk, "atk_output20.csv")
for (year in 2005:2018){
#if(year == 2014){next
#} else {
cpsasec_df <- readRDS( file.path( path.expand( "~" ) , "CPSASEC" , paste(year,"cps asec.rds") ) )
if(year < 2005){
#No Replicate Weights (Pre-2005)
cpsasec_design <- svydesign(
weights = ~marsupwt,
data = cpsasec_df,
ids = ~1)} else {
# Replicate Weights (Post-2005)
cpsasec_design <- svrepdesign(
weights = ~ marsupwt ,
repweights = "pwwgt[1-9]" ,
type = "Fay" ,
rho = ( 1 - 1 / sqrt( 4 ) ) ,
data = cpsasec_df ,
combined.weights = TRUE)}
rm(cpsasec_df)
cpsasec_design$mse <- TRUE
cpsasec_design <- convey_prep( cpsasec_design )
#cpsasec_design <- update(cpsasec_design, a_numper = ifelse( h_numper > hunder18 ,h_numper-hunder18, h_numper))
cpsasec_design <- update(cpsasec_design,
#old_equiv_htotval = htotval/a_numper,
state_name=factor(gestfips,levels=c(1L,2L,4L,5L,6L,8L,9L,10L,11L,12L,13L,15L,16L,17L,18L,19L,20L,21L,22L,23L,24L,25L,26L,27L,28L,29L,30L,31L,32L,33L,34L,35L,36L,37L,38L,39L,40L,41L,42L,44L,45L,46L,47L,48L,49L,50L,51L,53L,54L,55L,56L),labels=c("Alabama","Alaska","Arizona","Arkansas","California","Colorado","Connecticut","Delaware","District of Columbia","Florida","Georgia","Hawaii","Idaho","Illinois","Indiana","Iowa","Kansas","Kentucky","Louisiana","Maine","Maryland","Massachusetts","Michigan","Minnesota","Mississippi","Missouri","Montana","Nebraska","Nevada","New Hampshire","New Jersey","New Mexico","New York","North Carolina","North Dakota","Ohio","Oklahoma","Oregon","Pennsylvania","Rhode Island","South Carolina","South Dakota","Tennessee","Texas","Utah","Vermont","Virginia","Washington","West Virginia","Wisconsin","Wyoming")),
metro_size = factor(gtcbsasz, levels=c(0L,2L,3L,4L,5L,6L,7L),labels=c("Not identified or nonmetropolitan","100,000 - 249,999","250,000 - 499,999",'500,000 - 999,999','1,000,000 - 2,499,999','2,500,000 - 4,999,999','5,000,000+')),
p_ptotval = ifelse(ptotval > 0, ptotval, 0),
p_htotval = ifelse(htotval > 0, htotval, 0),
equiv_htotval= ifelse(p_htotval > 0, p_htotval * (p_ptotval/p_htotval),0 ))
cpsasec_design <- update(cpsasec_design, metro_3p = ifelse(
gtcbsasz%in%0:1, "Not identified or nonmetropolitan",
ifelse(gtcbsasz%in%2:4, "100,000 - 999,999",
ifelse(gtcbsasz%in%5:7, "1,000,000+", "Not identified or nonmetropolitan"))))
output_gini  =svyby(~equiv_htotval, ~metro_3p, (cpsasec_design ), svygini)
output_gini <- as.data.frame(output_gini)
colnames(output_gini)[colnames(output_gini)=="gini"] <- "output_gini"
output_gini <- subset(output_gini, select = -c(se.equiv_htotval) )
output_atk =svyby(~equiv_htotval, ~state_name, subset(cpsasec_design ,equiv_htotval > 0), svyatk, epsilon = 1 ,na.rm.all= T)
output_atk <- as.data.frame(output_atk)
colnames(output_atk)[colnames(output_atk)=="atkinson"] <- "output_atk"
output_atk <- subset(output_atk, select = -c(se.equiv_htotval) )
# add year
print(year)
output_gini[ , "survey_year"] <- NA
(output_gini$survey_year <- as.numeric(year) - 1)
output_gini<-as.data.frame(output_gini)
print(output_gini)
output_atk[ , "survey_year"] <- NA
(output_atk$survey_year <- as.numeric(year) - 1)
(output_atk<-as.data.frame(output_atk))
print(output_atk)
# Loop back to beggining
if( year == 2005){
final_output_gini <- as.data.frame(output_gini)
final_output_atk <- as.data.frame(output_atk)
} else {
final_output_gini <-  rbind.fill(final_output_gini, output_gini)
final_output_atk <-  rbind.fill(final_output_atk, output_atk)
}
}
library(survey)
library(reshape2)
library(plyr)
library(convey)
# state=read.csv('/Users/rorr/Desktop/Welfare_Policy/Data/R - Survey data/Current Population Survey (CPS)/CPS_Variable_Names/State_FIPS.csv')
#year=2014
for (year in 2005:2018){
#if(year == 2014){next
#} else {
cpsasec_df <- readRDS( file.path( path.expand( "~" ) , "CPSASEC" , paste(year,"cps asec.rds") ) )
if(year < 2005){
#No Replicate Weights (Pre-2005)
cpsasec_design <- svydesign(
weights = ~marsupwt,
data = cpsasec_df,
ids = ~1)} else {
# Replicate Weights (Post-2005)
cpsasec_design <- svrepdesign(
weights = ~ marsupwt ,
repweights = "pwwgt[1-9]" ,
type = "Fay" ,
rho = ( 1 - 1 / sqrt( 4 ) ) ,
data = cpsasec_df ,
combined.weights = TRUE)}
rm(cpsasec_df)
cpsasec_design$mse <- TRUE
cpsasec_design <- convey_prep( cpsasec_design )
#cpsasec_design <- update(cpsasec_design, a_numper = ifelse( h_numper > hunder18 ,h_numper-hunder18, h_numper))
cpsasec_design <- update(cpsasec_design,
#old_equiv_htotval = htotval/a_numper,
state_name=factor(gestfips,levels=c(1L,2L,4L,5L,6L,8L,9L,10L,11L,12L,13L,15L,16L,17L,18L,19L,20L,21L,22L,23L,24L,25L,26L,27L,28L,29L,30L,31L,32L,33L,34L,35L,36L,37L,38L,39L,40L,41L,42L,44L,45L,46L,47L,48L,49L,50L,51L,53L,54L,55L,56L),labels=c("Alabama","Alaska","Arizona","Arkansas","California","Colorado","Connecticut","Delaware","District of Columbia","Florida","Georgia","Hawaii","Idaho","Illinois","Indiana","Iowa","Kansas","Kentucky","Louisiana","Maine","Maryland","Massachusetts","Michigan","Minnesota","Mississippi","Missouri","Montana","Nebraska","Nevada","New Hampshire","New Jersey","New Mexico","New York","North Carolina","North Dakota","Ohio","Oklahoma","Oregon","Pennsylvania","Rhode Island","South Carolina","South Dakota","Tennessee","Texas","Utah","Vermont","Virginia","Washington","West Virginia","Wisconsin","Wyoming")),
metro_size = factor(gtcbsasz, levels=c(0L,2L,3L,4L,5L,6L,7L),labels=c("Not identified or nonmetropolitan","100,000 - 249,999","250,000 - 499,999",'500,000 - 999,999','1,000,000 - 2,499,999','2,500,000 - 4,999,999','5,000,000+')),
p_ptotval = ifelse(ptotval > 0, ptotval, 0),
p_htotval = ifelse(htotval > 0, htotval, 0),
equiv_htotval= ifelse(p_htotval > 0, p_htotval * (p_ptotval/p_htotval),0 ))
cpsasec_design <- update(cpsasec_design, metro_3p = ifelse(
gtcbsasz%in%0:1, "Not identified or nonmetropolitan",
ifelse(gtcbsasz%in%2:4, "100,000 - 999,999",
ifelse(gtcbsasz%in%5:7, "1,000,000+", "Not identified or nonmetropolitan"))))
output_gini  =svyby(~equiv_htotval, ~metro_3p, (cpsasec_design ), svygini)
output_gini <- as.data.frame(output_gini)
colnames(output_gini)[colnames(output_gini)=="gini"] <- "output_gini"
output_gini <- subset(output_gini, select = -c(se.equiv_htotval) )
output_atk =svyby(~equiv_htotval, ~state_name, subset(cpsasec_design ,equiv_htotval > 0), svyatk, epsilon = 1 ,na.rm.all= T)
output_atk <- as.data.frame(output_atk)
colnames(output_atk)[colnames(output_atk)=="atkinson"] <- "output_atk"
output_atk <- subset(output_atk, select = -c(se.equiv_htotval) )
# add year
print(year)
output_gini[ , "survey_year"] <- NA
(output_gini$survey_year <- as.numeric(year) - 1)
output_gini<-as.data.frame(output_gini)
print(output_gini)
output_atk[ , "survey_year"] <- NA
(output_atk$survey_year <- as.numeric(year) - 1)
(output_atk<-as.data.frame(output_atk))
print(output_atk)
# Loop back to beggining
if( year == 2005){
final_output_gini <- as.data.frame(output_gini)
final_output_atk <- as.data.frame(output_atk)
} else {
final_output_gini <-  rbind.fill(final_output_gini, output_gini)
final_output_atk <-  rbind.fill(final_output_atk, output_atk)
}
}
write.csv(final_output_gini, "gini_output.csv")
write.csv(final_output_atk, "atk_output.csv")
library(survey)
library(reshape2)
library(plyr)
library(convey)
# state=read.csv('/Users/rorr/Desktop/Welfare_Policy/Data/R - Survey data/Current Population Survey (CPS)/CPS_Variable_Names/State_FIPS.csv')
#year=2014
for (year in 2005:2018){
#if(year == 2014){next
#} else {
cpsasec_df <- readRDS( file.path( path.expand( "~" ) , "CPSASEC" , paste(year,"cps asec.rds") ) )
if(year < 2005){
#No Replicate Weights (Pre-2005)
cpsasec_design <- svydesign(
weights = ~marsupwt,
data = cpsasec_df,
ids = ~1)} else {
# Replicate Weights (Post-2005)
cpsasec_design <- svrepdesign(
weights = ~ marsupwt ,
repweights = "pwwgt[1-9]" ,
type = "Fay" ,
rho = ( 1 - 1 / sqrt( 4 ) ) ,
data = cpsasec_df ,
combined.weights = TRUE)}
rm(cpsasec_df)
cpsasec_design$mse <- TRUE
cpsasec_design <- convey_prep( cpsasec_design )
#cpsasec_design <- update(cpsasec_design, a_numper = ifelse( h_numper > hunder18 ,h_numper-hunder18, h_numper))
cpsasec_design <- update(cpsasec_design,
#old_equiv_htotval = htotval/a_numper,
state_name=factor(gestfips,levels=c(1L,2L,4L,5L,6L,8L,9L,10L,11L,12L,13L,15L,16L,17L,18L,19L,20L,21L,22L,23L,24L,25L,26L,27L,28L,29L,30L,31L,32L,33L,34L,35L,36L,37L,38L,39L,40L,41L,42L,44L,45L,46L,47L,48L,49L,50L,51L,53L,54L,55L,56L),labels=c("Alabama","Alaska","Arizona","Arkansas","California","Colorado","Connecticut","Delaware","District of Columbia","Florida","Georgia","Hawaii","Idaho","Illinois","Indiana","Iowa","Kansas","Kentucky","Louisiana","Maine","Maryland","Massachusetts","Michigan","Minnesota","Mississippi","Missouri","Montana","Nebraska","Nevada","New Hampshire","New Jersey","New Mexico","New York","North Carolina","North Dakota","Ohio","Oklahoma","Oregon","Pennsylvania","Rhode Island","South Carolina","South Dakota","Tennessee","Texas","Utah","Vermont","Virginia","Washington","West Virginia","Wisconsin","Wyoming")),
metro_size = factor(gtcbsasz, levels=c(0L,2L,3L,4L,5L,6L,7L),labels=c("Not identified or nonmetropolitan","100,000 - 249,999","250,000 - 499,999",'500,000 - 999,999','1,000,000 - 2,499,999','2,500,000 - 4,999,999','5,000,000+')),
p_ptotval = ifelse(ptotval > 0, ptotval, 0),
p_htotval = ifelse(htotval > 0, htotval, 0),
equiv_htotval= ifelse(p_htotval > 0, p_htotval * (p_ptotval/p_htotval),0 ))
# cpsasec_design <- update(cpsasec_design, metro_3p = ifelse(
# 	gtcbsasz%in%0:1, "Not identified or nonmetropolitan",
# 	ifelse(gtcbsasz%in%2:4, "100,000 - 999,999",
# 	ifelse(gtcbsasz%in%5:7, "1,000,000+", "Not identified or nonmetropolitan"))))
output_gini  =svyby(~equiv_htotval, ~metro_size, (cpsasec_design ), svygini)
output_gini <- as.data.frame(output_gini)
colnames(output_gini)[colnames(output_gini)=="gini"] <- "output_gini"
output_gini <- subset(output_gini, select = -c(se.equiv_htotval) )
output_atk =svyby(~equiv_htotval, ~state_name, subset(cpsasec_design ,equiv_htotval > 0), svyatk, epsilon = 1 ,na.rm.all= T)
output_atk <- as.data.frame(output_atk)
colnames(output_atk)[colnames(output_atk)=="atkinson"] <- "output_atk"
output_atk <- subset(output_atk, select = -c(se.equiv_htotval) )
# add year
print(year)
output_gini[ , "survey_year"] <- NA
(output_gini$survey_year <- as.numeric(year) - 1)
output_gini<-as.data.frame(output_gini)
print(output_gini)
output_atk[ , "survey_year"] <- NA
(output_atk$survey_year <- as.numeric(year) - 1)
(output_atk<-as.data.frame(output_atk))
print(output_atk)
# Loop back to beggining
if( year == 2005){
final_output_gini <- as.data.frame(output_gini)
final_output_atk <- as.data.frame(output_atk)
} else {
final_output_gini <-  rbind.fill(final_output_gini, output_gini)
final_output_atk <-  rbind.fill(final_output_atk, output_atk)
}
}
# library(lodown)
# #examine all available CPSASEC microdata files
# cpsasec_cat=get_catalog( "cpsasec" , output_dir=file.path( path.expand( "~" ) , "CPSASEC" ) )
# cpsasec_cat=subset( cpsasec_cat , year>2008 )
# lodown( "cpsasec" , cpsasec_cat )
library(survey)
library(reshape2)
library(plyr)
library(convey)
# state=read.csv('/Users/rorr/Desktop/Welfare_Policy/Data/R - Survey data/Current Population Survey (CPS)/CPS_Variable_Names/State_FIPS.csv')
#year=2014
for (year in 2005:2018){
#if(year == 2014){next
#} else {
cpsasec_df <- readRDS( file.path( path.expand( "~" ) , "CPSASEC" , paste(year,"cps asec.rds") ) )
if(year < 2005){
#No Replicate Weights (Pre-2005)
cpsasec_design <- svydesign(
weights = ~marsupwt,
data = cpsasec_df,
ids = ~1)} else {
# Replicate Weights (Post-2005)
cpsasec_design <- svrepdesign(
weights = ~ marsupwt ,
repweights = "pwwgt[1-9]" ,
type = "Fay" ,
rho = ( 1 - 1 / sqrt( 4 ) ) ,
data = cpsasec_df ,
combined.weights = TRUE)}
rm(cpsasec_df)
cpsasec_design$mse <- TRUE
cpsasec_design <- convey_prep( cpsasec_design )
#cpsasec_design <- update(cpsasec_design, a_numper = ifelse( h_numper > hunder18 ,h_numper-hunder18, h_numper))
cpsasec_design <- update(cpsasec_design,
#old_equiv_htotval = htotval/a_numper,
state_name=factor(gestfips,levels=c(1L,2L,4L,5L,6L,8L,9L,10L,11L,12L,13L,15L,16L,17L,18L,19L,20L,21L,22L,23L,24L,25L,26L,27L,28L,29L,30L,31L,32L,33L,34L,35L,36L,37L,38L,39L,40L,41L,42L,44L,45L,46L,47L,48L,49L,50L,51L,53L,54L,55L,56L),labels=c("Alabama","Alaska","Arizona","Arkansas","California","Colorado","Connecticut","Delaware","District of Columbia","Florida","Georgia","Hawaii","Idaho","Illinois","Indiana","Iowa","Kansas","Kentucky","Louisiana","Maine","Maryland","Massachusetts","Michigan","Minnesota","Mississippi","Missouri","Montana","Nebraska","Nevada","New Hampshire","New Jersey","New Mexico","New York","North Carolina","North Dakota","Ohio","Oklahoma","Oregon","Pennsylvania","Rhode Island","South Carolina","South Dakota","Tennessee","Texas","Utah","Vermont","Virginia","Washington","West Virginia","Wisconsin","Wyoming")),
metro_size = factor(gtcbsasz, levels=c(0L,2L,3L,4L,5L,6L,7L),labels=c("Not identified or nonmetropolitan","100,000 - 249,999","250,000 - 499,999",'500,000 - 999,999','1,000,000 - 2,499,999','2,500,000 - 4,999,999','5,000,000+')),
p_ptotval = ifelse(ptotval > 0, ptotval, NA),
p_htotval = ifelse(htotval > 0, htotval, NA),
equiv_htotval= ifelse(p_htotval > 0, p_htotval * (p_ptotval/p_htotval),NA))
# cpsasec_design <- update(cpsasec_design, metro_3p = ifelse(
# 	gtcbsasz%in%0:1, "Not identified or nonmetropolitan",
# 	ifelse(gtcbsasz%in%2:4, "100,000 - 999,999",
# 	ifelse(gtcbsasz%in%5:7, "1,000,000+", "Not identified or nonmetropolitan"))))
output_gini  =svyby(~equiv_htotval, ~metro_size, (cpsasec_design ), svygini,na.rm.all= T)
output_gini <- as.data.frame(output_gini)
colnames(output_gini)[colnames(output_gini)=="gini"] <- "output_gini"
output_gini <- subset(output_gini, select = -c(se.equiv_htotval) )
output_atk =svyby(~equiv_htotval, ~state_name, subset(cpsasec_design ,equiv_htotval > 0), svyatk, epsilon = 1 ,na.rm.all= T)
output_atk <- as.data.frame(output_atk)
colnames(output_atk)[colnames(output_atk)=="atkinson"] <- "output_atk"
output_atk <- subset(output_atk, select = -c(se.equiv_htotval) )
# add year
print(year)
output_gini[ , "survey_year"] <- NA
(output_gini$survey_year <- as.numeric(year) - 1)
output_gini<-as.data.frame(output_gini)
print(output_gini)
output_atk[ , "survey_year"] <- NA
(output_atk$survey_year <- as.numeric(year) - 1)
(output_atk<-as.data.frame(output_atk))
print(output_atk)
# Loop back to beggining
if( year == 2005){
final_output_gini <- as.data.frame(output_gini)
final_output_atk <- as.data.frame(output_atk)
} else {
final_output_gini <-  rbind.fill(final_output_gini, output_gini)
final_output_atk <-  rbind.fill(final_output_atk, output_atk)
}
}
output_atk =svyby(~equiv_htotval, ~state_name, subset(cpsasec_design ,equiv_htotval > 0), svyatk, epsilon = 1 ,na.rm.all= T)
output_gini  =svyby(~equiv_htotval, ~metro_size, (cpsasec_design ), svygini,na.rm.all= T)
output_gini
cpsasec_design <- update(cpsasec_design,
#old_equiv_htotval = htotval/a_numper,
state_name=factor(gestfips,levels=c(1L,2L,4L,5L,6L,8L,9L,10L,11L,12L,13L,15L,16L,17L,18L,19L,20L,21L,22L,23L,24L,25L,26L,27L,28L,29L,30L,31L,32L,33L,34L,35L,36L,37L,38L,39L,40L,41L,42L,44L,45L,46L,47L,48L,49L,50L,51L,53L,54L,55L,56L),labels=c("Alabama","Alaska","Arizona","Arkansas","California","Colorado","Connecticut","Delaware","District of Columbia","Florida","Georgia","Hawaii","Idaho","Illinois","Indiana","Iowa","Kansas","Kentucky","Louisiana","Maine","Maryland","Massachusetts","Michigan","Minnesota","Mississippi","Missouri","Montana","Nebraska","Nevada","New Hampshire","New Jersey","New Mexico","New York","North Carolina","North Dakota","Ohio","Oklahoma","Oregon","Pennsylvania","Rhode Island","South Carolina","South Dakota","Tennessee","Texas","Utah","Vermont","Virginia","Washington","West Virginia","Wisconsin","Wyoming")),
metro_size = factor(gtcbsasz, levels=c(0L,2L,3L,4L,5L,6L,7L),labels=c("Not identified or nonmetropolitan","100,000 - 249,999","250,000 - 499,999",'500,000 - 999,999','1,000,000 - 2,499,999','2,500,000 - 4,999,999','5,000,000+')),
p_ptotval = ifelse(ptotval > 0, ptotval, NA),
p_htotval = ifelse(htotval > 0, htotval, NA),
equiv_htotval= ifelse(p_htotval > 0 & is.na(p_htotval) = F, p_htotval * (p_ptotval/p_htotval),NA))
cpsasec_design <- update(cpsasec_design,
#old_equiv_htotval = htotval/a_numper,
state_name=factor(gestfips,levels=c(1L,2L,4L,5L,6L,8L,9L,10L,11L,12L,13L,15L,16L,17L,18L,19L,20L,21L,22L,23L,24L,25L,26L,27L,28L,29L,30L,31L,32L,33L,34L,35L,36L,37L,38L,39L,40L,41L,42L,44L,45L,46L,47L,48L,49L,50L,51L,53L,54L,55L,56L),labels=c("Alabama","Alaska","Arizona","Arkansas","California","Colorado","Connecticut","Delaware","District of Columbia","Florida","Georgia","Hawaii","Idaho","Illinois","Indiana","Iowa","Kansas","Kentucky","Louisiana","Maine","Maryland","Massachusetts","Michigan","Minnesota","Mississippi","Missouri","Montana","Nebraska","Nevada","New Hampshire","New Jersey","New Mexico","New York","North Carolina","North Dakota","Ohio","Oklahoma","Oregon","Pennsylvania","Rhode Island","South Carolina","South Dakota","Tennessee","Texas","Utah","Vermont","Virginia","Washington","West Virginia","Wisconsin","Wyoming")),
metro_size = factor(gtcbsasz, levels=c(0L,2L,3L,4L,5L,6L,7L),labels=c("Not identified or nonmetropolitan","100,000 - 249,999","250,000 - 499,999",'500,000 - 999,999','1,000,000 - 2,499,999','2,500,000 - 4,999,999','5,000,000+')),
p_ptotval = ifelse(ptotval > 0, ptotval, NA),
p_htotval = ifelse(htotval > 0, htotval, NA),
equiv_htotval= ifelse(p_htotval > 0 & is.na(p_htotval) == F, p_htotval * (p_ptotval/p_htotval),NA))
# cpsasec_design <- update(cpsasec_design, metro_3p = ifelse(
# 	gtcbsasz%in%0:1, "Not identified or nonmetropolitan",
# 	ifelse(gtcbsasz%in%2:4, "100,000 - 999,999",
# 	ifelse(gtcbsasz%in%5:7, "1,000,000+", "Not identified or nonmetropolitan"))))
output_gini  =svyby(~equiv_htotval, ~metro_size, (cpsasec_design ), svygini, na.rm.all= T)
output_gini
cpsasec_design <- update(cpsasec_design,
#old_equiv_htotval = htotval/a_numper,
state_name=factor(gestfips,levels=c(1L,2L,4L,5L,6L,8L,9L,10L,11L,12L,13L,15L,16L,17L,18L,19L,20L,21L,22L,23L,24L,25L,26L,27L,28L,29L,30L,31L,32L,33L,34L,35L,36L,37L,38L,39L,40L,41L,42L,44L,45L,46L,47L,48L,49L,50L,51L,53L,54L,55L,56L),labels=c("Alabama","Alaska","Arizona","Arkansas","California","Colorado","Connecticut","Delaware","District of Columbia","Florida","Georgia","Hawaii","Idaho","Illinois","Indiana","Iowa","Kansas","Kentucky","Louisiana","Maine","Maryland","Massachusetts","Michigan","Minnesota","Mississippi","Missouri","Montana","Nebraska","Nevada","New Hampshire","New Jersey","New Mexico","New York","North Carolina","North Dakota","Ohio","Oklahoma","Oregon","Pennsylvania","Rhode Island","South Carolina","South Dakota","Tennessee","Texas","Utah","Vermont","Virginia","Washington","West Virginia","Wisconsin","Wyoming")),
metro_size = factor(gtcbsasz, levels=c(0L,2L,3L,4L,5L,6L,7L),labels=c("Not identified or nonmetropolitan","100,000 - 249,999","250,000 - 499,999",'500,000 - 999,999','1,000,000 - 2,499,999','2,500,000 - 4,999,999','5,000,000+')),
p_ptotval = ifelse(ptotval > 0, ptotval, NA),
p_htotval = ifelse(htotval > 0, htotval, NA),
equiv_htotval= ifelse(p_htotval > 0 & !is.na(p_htotval), p_htotval * (p_ptotval/p_htotval),NA))
# cpsasec_design <- update(cpsasec_design, metro_3p = ifelse(
# 	gtcbsasz%in%0:1, "Not identified or nonmetropolitan",
# 	ifelse(gtcbsasz%in%2:4, "100,000 - 999,999",
# 	ifelse(gtcbsasz%in%5:7, "1,000,000+", "Not identified or nonmetropolitan"))))
output_gini  =svyby(~equiv_htotval, ~metro_size, (cpsasec_design ), svygini, na.rm.all= T)
output_gini
output_gini  =svyby(~equiv_htotval, ~metro_size, subset(cpsasec_design, equiv_htotval > 0), svygini, na.rm.all= T)
output_gini
for (year in 2005:2018){
#if(year == 2014){next
#} else {
cpsasec_df <- readRDS( file.path( path.expand( "~" ) , "CPSASEC" , paste(year,"cps asec.rds") ) )
if(year < 2005){
#No Replicate Weights (Pre-2005)
cpsasec_design <- svydesign(
weights = ~marsupwt,
data = cpsasec_df,
ids = ~1)} else {
# Replicate Weights (Post-2005)
cpsasec_design <- svrepdesign(
weights = ~ marsupwt ,
repweights = "pwwgt[1-9]" ,
type = "Fay" ,
rho = ( 1 - 1 / sqrt( 4 ) ) ,
data = cpsasec_df ,
combined.weights = TRUE)}
rm(cpsasec_df)
cpsasec_design$mse <- TRUE
cpsasec_design <- convey_prep( cpsasec_design )
#cpsasec_design <- update(cpsasec_design, a_numper = ifelse( h_numper > hunder18 ,h_numper-hunder18, h_numper))
cpsasec_design <- update(cpsasec_design,
#old_equiv_htotval = htotval/a_numper,
state_name=factor(gestfips,levels=c(1L,2L,4L,5L,6L,8L,9L,10L,11L,12L,13L,15L,16L,17L,18L,19L,20L,21L,22L,23L,24L,25L,26L,27L,28L,29L,30L,31L,32L,33L,34L,35L,36L,37L,38L,39L,40L,41L,42L,44L,45L,46L,47L,48L,49L,50L,51L,53L,54L,55L,56L),labels=c("Alabama","Alaska","Arizona","Arkansas","California","Colorado","Connecticut","Delaware","District of Columbia","Florida","Georgia","Hawaii","Idaho","Illinois","Indiana","Iowa","Kansas","Kentucky","Louisiana","Maine","Maryland","Massachusetts","Michigan","Minnesota","Mississippi","Missouri","Montana","Nebraska","Nevada","New Hampshire","New Jersey","New Mexico","New York","North Carolina","North Dakota","Ohio","Oklahoma","Oregon","Pennsylvania","Rhode Island","South Carolina","South Dakota","Tennessee","Texas","Utah","Vermont","Virginia","Washington","West Virginia","Wisconsin","Wyoming")),
metro_size = factor(gtcbsasz, levels=c(0L,2L,3L,4L,5L,6L,7L),labels=c("Not identified or nonmetropolitan","100,000 - 249,999","250,000 - 499,999",'500,000 - 999,999','1,000,000 - 2,499,999','2,500,000 - 4,999,999','5,000,000+')),
p_ptotval = ifelse(ptotval > 0, ptotval, NA),
p_htotval = ifelse(htotval > 0, htotval, NA),
equiv_htotval= ifelse(p_htotval > 0 & !is.na(p_htotval), p_htotval * (p_ptotval/p_htotval),NA))
# cpsasec_design <- update(cpsasec_design, metro_3p = ifelse(
# 	gtcbsasz%in%0:1, "Not identified or nonmetropolitan",
# 	ifelse(gtcbsasz%in%2:4, "100,000 - 999,999",
# 	ifelse(gtcbsasz%in%5:7, "1,000,000+", "Not identified or nonmetropolitan"))))
output_gini  =svyby(~equiv_htotval, ~metro_size, subset(cpsasec_design, equiv_htotval > 0), svygini, na.rm.all= T)
output_gini <- as.data.frame(output_gini)
colnames(output_gini)[colnames(output_gini)=="gini"] <- "output_gini"
output_gini <- subset(output_gini, select = -c(se.equiv_htotval) )
output_atk =svyby(~equiv_htotval, ~state_name, subset(cpsasec_design ,equiv_htotval > 0), svyatk, epsilon = 1 ,na.rm.all= T)
output_atk <- as.data.frame(output_atk)
colnames(output_atk)[colnames(output_atk)=="atkinson"] <- "output_atk"
output_atk <- subset(output_atk, select = -c(se.equiv_htotval) )
# add year
print(year)
output_gini[ , "survey_year"] <- NA
(output_gini$survey_year <- as.numeric(year) - 1)
output_gini<-as.data.frame(output_gini)
print(output_gini)
output_atk[ , "survey_year"] <- NA
(output_atk$survey_year <- as.numeric(year) - 1)
(output_atk<-as.data.frame(output_atk))
print(output_atk)
# Loop back to beggining
if( year == 2005){
final_output_gini <- as.data.frame(output_gini)
final_output_atk <- as.data.frame(output_atk)
} else {
final_output_gini <-  rbind.fill(final_output_gini, output_gini)
final_output_atk <-  rbind.fill(final_output_atk, output_atk)
}
}
write.csv(final_output_gini, "gini_output.csv")
write.csv(final_output_atk, "atk_output.csv")
# #Advanced Poverty Measures
# install.packages( "devtools" , repos="http://cran.rstudio.com/" )
# library(devtools)
# install_github( "ajdamico/lodown" , dependencies=TRUE )
# library(lodown)
# #examine all available CPSASEC microdata files
# cpsasec_cat=get_catalog( "cpsasec" , output_dir=file.path( path.expand( "~" ) , "CPSASEC" ) )
# cpsasec_cat=subset( cpsasec_cat , year>2008 )
# lodown( "cpsasec" , cpsasec_cat )
library(survey)
library(reshape2)
library(plyr)
library(convey)
# state=read.csv('/Users/rorr/Desktop/Welfare_Policy/Data/R - Survey data/Current Population Survey (CPS)/CPS_Variable_Names/State_FIPS.csv')
#year=2014
for (year in 2005:2018){
#if(year == 2014){next
#} else {
cpsasec_df <- readRDS( file.path( path.expand( "~" ) , "CPSASEC" , paste(year,"cps asec.rds") ) )
if(year < 2005){
#No Replicate Weights (Pre-2005)
cpsasec_design <- svydesign(
weights = ~marsupwt,
data = cpsasec_df,
ids = ~1)} else {
# Replicate Weights (Post-2005)
cpsasec_design <- svrepdesign(
weights = ~ marsupwt ,
repweights = "pwwgt[1-9]" ,
type = "Fay" ,
rho = ( 1 - 1 / sqrt( 4 ) ) ,
data = cpsasec_df ,
combined.weights = TRUE)}
rm(cpsasec_df)
cpsasec_design$mse <- TRUE
cpsasec_design <- convey_prep( cpsasec_design )
#cpsasec_design <- update(cpsasec_design, a_numper = ifelse( h_numper > hunder18 ,h_numper-hunder18, h_numper))
cpsasec_design <- update(cpsasec_design,
#old_equiv_htotval = htotval/a_numper,
state_name=factor(gestfips,levels=c(1L,2L,4L,5L,6L,8L,9L,10L,11L,12L,13L,15L,16L,17L,18L,19L,20L,21L,22L,23L,24L,25L,26L,27L,28L,29L,30L,31L,32L,33L,34L,35L,36L,37L,38L,39L,40L,41L,42L,44L,45L,46L,47L,48L,49L,50L,51L,53L,54L,55L,56L),labels=c("Alabama","Alaska","Arizona","Arkansas","California","Colorado","Connecticut","Delaware","District of Columbia","Florida","Georgia","Hawaii","Idaho","Illinois","Indiana","Iowa","Kansas","Kentucky","Louisiana","Maine","Maryland","Massachusetts","Michigan","Minnesota","Mississippi","Missouri","Montana","Nebraska","Nevada","New Hampshire","New Jersey","New Mexico","New York","North Carolina","North Dakota","Ohio","Oklahoma","Oregon","Pennsylvania","Rhode Island","South Carolina","South Dakota","Tennessee","Texas","Utah","Vermont","Virginia","Washington","West Virginia","Wisconsin","Wyoming")),
metro_size = factor(gtcbsasz, levels=c(0L,2L,3L,4L,5L,6L,7L),labels=c("Not identified or nonmetropolitan","100,000 - 249,999","250,000 - 499,999",'500,000 - 999,999','1,000,000 - 2,499,999','2,500,000 - 4,999,999','5,000,000+')),
p_ptotval = ifelse(ptotval > 0, ptotval, NA),
p_htotval = ifelse(htotval > 0, htotval, NA),
equiv_htotval= ifelse(p_htotval > 0 & !is.na(p_htotval), p_htotval * (p_ptotval/p_htotval),NA))
# cpsasec_design <- update(cpsasec_design, metro_3p = ifelse(
# 	gtcbsasz%in%0:1, "Not identified or nonmetropolitan",
# 	ifelse(gtcbsasz%in%2:4, "100,000 - 999,999",
# 	ifelse(gtcbsasz%in%5:7, "1,000,000+", "Not identified or nonmetropolitan"))))
output_gini  =svyby(~equiv_htotval, ~metro_size, subset(cpsasec_design, equiv_htotval > 0), svygini, na.rm.all= T)
output_gini <- as.data.frame(output_gini)
colnames(output_gini)[colnames(output_gini)=="gini"] <- "output_gini"
output_gini <- subset(output_gini, select = -c(se.equiv_htotval) )
output_atk =svyby(~equiv_htotval, ~state_name, subset(cpsasec_design ,equiv_htotval > 0), svyatk, epsilon = 0.5 ,na.rm.all= T)
output_atk <- as.data.frame(output_atk)
colnames(output_atk)[colnames(output_atk)=="atkinson"] <- "output_atk"
output_atk <- subset(output_atk, select = -c(se.equiv_htotval) )
# add year
print(year)
output_gini[ , "survey_year"] <- NA
(output_gini$survey_year <- as.numeric(year) - 1)
output_gini<-as.data.frame(output_gini)
print(output_gini)
output_atk[ , "survey_year"] <- NA
(output_atk$survey_year <- as.numeric(year) - 1)
(output_atk<-as.data.frame(output_atk))
print(output_atk)
# Loop back to beggining
if( year == 2005){
final_output_gini <- as.data.frame(output_gini)
final_output_atk <- as.data.frame(output_atk)
} else {
final_output_gini <-  rbind.fill(final_output_gini, output_gini)
final_output_atk <-  rbind.fill(final_output_atk, output_atk)
}
}
write.csv(final_output_gini, "gini_output.csv")
write.csv(final_output_atk, "atk_output.csv")
svygini
getAnywhere(svygini)
methods(svygini)
convey:::svygini
convey:::svygini.ts
methods(convey:::svygini)
methods(svygini)
?methods
UseMethod("svygini")
debug(svygini)
debugonce(svygini)
svygini(~equiv_htotval,cpsasec_design)
