page <- aggregate(sessions ~  page_name + date, gadata, sum)
get_data <- function(vid, from, to, dim, met, max) {
df <- google_analytics(viewId = vid,
date_range = c(from, to),
metrics = met,
dimensions = dim,
#met_filters = fc,
dim_filters = fc2,
max = max)
# clean up and set class
df[,1] <- gsub(" / ", "/", df[,1])              # remove spacing
df[,1] <- gsub(":?(NA|CLICK|NA):?", "", df[,1]) # remove CLICK and NA
#df[,2] <- as.numeric(df[,2])                    # conversion column is character :-/
df$page_name <- sapply(df$pagePath, basename)
df$page_name= gsub("-", ' ', df$page_name)
df$page_name= sapply(df$page_name, simpleCap)
refcols <- c("page_name", 'dimension1')
df <- df[, c(refcols, setdiff(names(df), refcols))]
df$pagePath <- NULL
df$page_name <- gsub("\\?*","", df$page_name)
#strsplit(df$page_name, split = '?',fixed = T)
#df$pagePath <- sub("(.+?)[./].+", "\\1", sapply(df$pagePath, function(x) parse_url(x)$path, USE.NAMES = FALSE))
df
}
gadata <- get_data(vid=vid, from=from, to=to, dim=dim, met=met, max=max)
gadata = filter(gadata, !grepl("Caleb", dimension1) & !grepl('Cannon', dimension1) & !grepl('Levy', dimension1))
page <- aggregate(sessions ~  page_name + date, gadata, sum)
get_data <- function(vid, from, to, dim, met, max) {
df <- google_analytics(viewId = vid,
date_range = c(from, to),
metrics = met,
dimensions = dim,
#met_filters = fc,
dim_filters = fc2,
max = max)
# clean up and set class
df[,1] <- gsub(" / ", "/", df[,1])              # remove spacing
df[,1] <- gsub(":?(NA|CLICK|NA):?", "", df[,1]) # remove CLICK and NA
#df[,2] <- as.numeric(df[,2])                    # conversion column is character :-/
df$page_name <- sapply(df$pagePath, basename)
df$page_name= gsub("-", ' ', df$page_name)
df$page_name= sapply(df$page_name, simpleCap)
refcols <- c("page_name", 'dimension1')
df <- df[, c(refcols, setdiff(names(df), refcols))]
df$pagePath <- NULL
#df$page_name <- gsub("\\?*","", df$page_name[])
df$page_name <- strsplit(df$page_name, split = '?',fixed = T)
#df$pagePath <- sub("(.+?)[./].+", "\\1", sapply(df$pagePath, function(x) parse_url(x)$path, USE.NAMES = FALSE))
df
}
gadata <- get_data(vid=vid, from=from, to=to, dim=dim, met=met, max=max)
gadata = filter(gadata, !grepl("Caleb", dimension1) & !grepl('Cannon', dimension1) & !grepl('Levy', dimension1))
get_data <- function(vid, from, to, dim, met, max) {
df <- google_analytics(viewId = vid,
date_range = c(from, to),
metrics = met,
dimensions = dim,
#met_filters = fc,
dim_filters = fc2,
max = max)
# clean up and set class
df[,1] <- gsub(" / ", "/", df[,1])              # remove spacing
df[,1] <- gsub(":?(NA|CLICK|NA):?", "", df[,1]) # remove CLICK and NA
#df[,2] <- as.numeric(df[,2])                    # conversion column is character :-/
df$page_name <- sapply(df$pagePath, basename)
df$page_name= gsub("-", ' ', df$page_name)
df$page_name= sapply(df$page_name, simpleCap)
refcols <- c("page_name", 'dimension1')
df <- df[, c(refcols, setdiff(names(df), refcols))]
df$pagePath <- NULL
#df$page_name <- gsub("\\?*","", df$page_name[])
df$page_name <- strsplit(df$page_name[1], split = '?',fixed = T)
#df$pagePath <- sub("(.+?)[./].+", "\\1", sapply(df$pagePath, function(x) parse_url(x)$path, USE.NAMES = FALSE))
df
}
gadata <- get_data(vid=vid, from=from, to=to, dim=dim, met=met, max=max)
get_data <- function(vid, from, to, dim, met, max) {
df <- google_analytics(viewId = vid,
date_range = c(from, to),
metrics = met,
dimensions = dim,
#met_filters = fc,
dim_filters = fc2,
max = max)
# clean up and set class
df[,1] <- gsub(" / ", "/", df[,1])              # remove spacing
df[,1] <- gsub(":?(NA|CLICK|NA):?", "", df[,1]) # remove CLICK and NA
#df[,2] <- as.numeric(df[,2])                    # conversion column is character :-/
df$page_name <- sapply(df$pagePath, basename)
df$page_name= gsub("-", ' ', df$page_name)
df$page_name= sapply(df$page_name, simpleCap)
refcols <- c("page_name", 'dimension1')
df <- df[, c(refcols, setdiff(names(df), refcols))]
df$pagePath <- NULL
#df$page_name <- gsub("\\?*","", df$page_name[])
#df$page_name <- strsplit(df$page_name[1], split = '?',fixed = T)
#df$pagePath <- sub("(.+?)[./].+", "\\1", sapply(df$pagePath, function(x) parse_url(x)$path, USE.NAMES = FALSE))
df
}
gadata2 <- get_data(vid=vid, from=from, to=to, dim=dim, met=met, max=max)
View(gadata2)
get_data <- function(vid, from, to, dim, met, max) {
df <- google_analytics(viewId = vid,
date_range = c(from, to),
metrics = met,
dimensions = dim,
#met_filters = fc,
dim_filters = fc2,
max = max)
# clean up and set class
df[,1] <- gsub(" / ", "/", df[,1])              # remove spacing
df[,1] <- gsub(":?(NA|CLICK|NA):?", "", df[,1]) # remove CLICK and NA
#df[,2] <- as.numeric(df[,2])                    # conversion column is character :-/
df$page_name <- sapply(df$pagePath, basename)
df$page_name= gsub("-", ' ', df$page_name)
df$page_name= sapply(df$page_name, simpleCap)
refcols <- c("page_name", 'dimension1')
df <- df[, c(refcols, setdiff(names(df), refcols))]
df$pagePath <- NULL
df$page_name = sub('?([^?]*)$', '', df$page_name)
#df$page_name <- gsub("\\?*","", df$page_name[])
#df$page_name <- strsplit(df$page_name[1], split = '?',fixed = T)
#df$pagePath <- sub("(.+?)[./].+", "\\1", sapply(df$pagePath, function(x) parse_url(x)$path, USE.NAMES = FALSE))
df
}
gadata2 <- get_data(vid=vid, from=from, to=to, dim=dim, met=met, max=max)
get_data <- function(vid, from, to, dim, met, max) {
df <- google_analytics(viewId = vid,
date_range = c(from, to),
metrics = met,
dimensions = dim,
#met_filters = fc,
dim_filters = fc2,
max = max)
# clean up and set class
df[,1] <- gsub(" / ", "/", df[,1])              # remove spacing
df[,1] <- gsub(":?(NA|CLICK|NA):?", "", df[,1]) # remove CLICK and NA
#df[,2] <- as.numeric(df[,2])                    # conversion column is character :-/
df$page_name <- sapply(df$pagePath, basename)
df$page_name= gsub("-", ' ', df$page_name)
df$page_name= sapply(df$page_name, simpleCap)
refcols <- c("page_name", 'dimension1')
df <- df[, c(refcols, setdiff(names(df), refcols))]
df$pagePath <- NULL
df$page_name = sub('?([^?]*)$', '\\1', df$page_name)
#df$page_name <- gsub("\\?*","", df$page_name[])
#df$page_name <- strsplit(df$page_name[1], split = '?',fixed = T)
#df$pagePath <- sub("(.+?)[./].+", "\\1", sapply(df$pagePath, function(x) parse_url(x)$path, USE.NAMES = FALSE))
df
}
gadata2 <- get_data(vid=vid, from=from, to=to, dim=dim, met=met, max=max)
get_data <- function(vid, from, to, dim, met, max) {
df <- google_analytics(viewId = vid,
date_range = c(from, to),
metrics = met,
dimensions = dim,
#met_filters = fc,
dim_filters = fc2,
max = max)
# clean up and set class
df[,1] <- gsub(" / ", "/", df[,1])              # remove spacing
df[,1] <- gsub(":?(NA|CLICK|NA):?", "", df[,1]) # remove CLICK and NA
#df[,2] <- as.numeric(df[,2])                    # conversion column is character :-/
df$page_name <- sapply(df$pagePath, basename)
df$page_name= gsub("-", ' ', df$page_name)
df$page_name= sapply(df$page_name, simpleCap)
refcols <- c("page_name", 'dimension1')
df <- df[, c(refcols, setdiff(names(df), refcols))]
df$pagePath <- NULL
df$page_name = gsub("^([^?]*?[^?]*)?.*$", "\\1",df$page_name)
#df$page_name <- gsub("\\?*","", df$page_name[])
#df$page_name <- strsplit(df$page_name[1], split = '?',fixed = T)
#df$pagePath <- sub("(.+?)[./].+", "\\1", sapply(df$pagePath, function(x) parse_url(x)$path, USE.NAMES = FALSE))
df
}
gadata2 <- get_data(vid=vid, from=from, to=to, dim=dim, met=met, max=max)
get_data <- function(vid, from, to, dim, met, max) {
df <- google_analytics(viewId = vid,
date_range = c(from, to),
metrics = met,
dimensions = dim,
#met_filters = fc,
dim_filters = fc2,
max = max)
# clean up and set class
df[,1] <- gsub(" / ", "/", df[,1])              # remove spacing
df[,1] <- gsub(":?(NA|CLICK|NA):?", "", df[,1]) # remove CLICK and NA
#df[,2] <- as.numeric(df[,2])                    # conversion column is character :-/
df$page_name <- sapply(df$pagePath, basename)
df$page_name= gsub("-", ' ', df$page_name)
df$page_name= sapply(df$page_name, simpleCap)
refcols <- c("page_name", 'dimension1')
df <- df[, c(refcols, setdiff(names(df), refcols))]
df$pagePath <- NULL
df$page_name = gsub("^([^?]*?[^?]*)?.*$", "\\1",df$page_name)
#df$page_name <- gsub("\\?*","", df$page_name[])
#df$page_name <- strsplit(df$page_name[1], split = '?',fixed = T)
#df$pagePath <- sub("(.+?)[./].+", "\\1", sapply(df$pagePath, function(x) parse_url(x)$path, USE.NAMES = FALSE))
df
}
gadata <- get_data(vid=vid, from=from, to=to, dim=dim, met=met, max=max)
gadata = filter(gadata, !grepl("Caleb", dimension1) & !grepl('Cannon', dimension1) & !grepl('Levy', dimension1))
page <- aggregate(sessions ~  page_name + date, gadata, sum)
page %>%
ggplot(aes(x=date,y=sessions,group=page_name, colour=page_name)) +
geom_line() +
theme(axis.text.x = element_text(angle = 90, hjust = 1))
# some styles to rotate x-axis labels
get_data <- function(vid, from, to, dim, met, max) {
df <- google_analytics(viewId = vid,
date_range = c(from, to),
metrics = met,
dimensions = dim,
#met_filters = fc,
dim_filters = fc2,
max = max)
# clean up and set class
df[,1] <- gsub(" / ", "/", df[,1])              # remove spacing
df[,1] <- gsub(":?(NA|CLICK|NA):?", "", df[,1]) # remove CLICK and NA
#df[,2] <- as.numeric(df[,2])                    # conversion column is character :-/
df$page_name <- sapply(df$pagePath, basename)
df$page_name= gsub("-", ' ', df$page_name)
df$page_name= sapply(df$page_name, simpleCap)
refcols <- c("page_name", 'dimension1')
df <- df[, c(refcols, setdiff(names(df), refcols))]
df$pagePath <- NULL
df$page_name = gsub("^([^?]*?)?.*$", "\\1",df$page_name)
#df$page_name <- gsub("\\?*","", df$page_name[])
#df$page_name <- strsplit(df$page_name[1], split = '?',fixed = T)
#df$pagePath <- sub("(.+?)[./].+", "\\1", sapply(df$pagePath, function(x) parse_url(x)$path, USE.NAMES = FALSE))
df
}
gadata <- get_data(vid=vid, from=from, to=to, dim=dim, met=met, max=max)
gadata = filter(gadata, !grepl("Caleb", dimension1) & !grepl('Cannon', dimension1) & !grepl('Levy', dimension1))
page <- aggregate(sessions ~  page_name + date, gadata, sum)
page %>%
ggplot(aes(x=date,y=sessions,group=page_name, colour=page_name)) +
geom_line() +
theme(axis.text.x = element_text(angle = 90, hjust = 1))
# some styles to rotate x-axis labels
page %>%
ggplot(aes(x=date,y=sessions,group=page_name, colour=page_name)) +
geom_line()  +
theme(axis.text.x = element_text(angle = 90, hjust = 1, legend.position="none"))
page %>%
ggplot(aes(x=date,y=sessions,group=page_name, colour=page_name)) +
geom_line()  +
theme(axis.text.x = element_text(angle = 90, hjust = 1), legend.position="none")
page %>%
ggplot(aes(x=date,y=sessions,group=page_name, colour=page_name)) +
geom_line()  +
theme(axis.text.x = element_text(angle = 90, hjust = 1), legend.position="none")
+ scale_x_date(breaks = date[seq(1, length(date), by = 50)])
page %>%
ggplot(aes(x=date,y=sessions,group=page_name, colour=page_name)) +
geom_line()  +
theme(axis.text.x = element_text(angle = 90, hjust = 1), legend.position="none")
+  scale_x_date(date_breaks = "50 days", date_labels = "%d.%m.%Y")
gadata$date <- as.Date(gadata$date , "%y/%m/%d")
page <- aggregate(sessions ~  page_name + date, gadata, sum)
page <- aggregate(sessions ~ (page_name, date), gadata, sum)
page <- aggregate(sessions ~ c(page_name, date), gadata, sum)
page <- aggregate(sessions ~ (page_name + date), gadata, sum)
gadata <- get_data(vid=vid, from=from, to=to, dim=dim, met=met, max=max)
gadata = filter(gadata, !grepl("Caleb", dimension1) & !grepl('Cannon', dimension1) & !grepl('Levy', dimension1))
gadata$date <- as.Date(gadata$date , "%Y-%m-%d")
page <- aggregate(sessions ~ (page_name + date), gadata, sum)
page %>%
ggplot(aes(x=date,y=sessions,group=page_name, colour=page_name)) +
geom_line()  +
theme(axis.text.x = element_text(angle = 90, hjust = 1), legend.position="none")
+  scale_x_date(date_breaks = "50 days", date_labels = "%d.%m.%Y")
page %>%
ggplot(aes(x=date,y=sessions,group=page_name, colour=page_name)) +
geom_line()  +
theme(axis.text.x = element_text(angle = 90, hjust = 1), legend.position="none")
+  scale_x_date(date_breaks = "50 days", date_labels = "%Y-%m-%d")
page %>%
ggplot(aes(x=date,y=sessions,group=page_name, colour=page_name)) +
geom_line()  +
theme(axis.text.x = element_text(angle = 90, hjust = 1), legend.position="none")
+  scale_x_date(date_breaks = "40 days", date_labels = "%Y-%m-%d")
page <- aggregate(sessions ~ (date), gadata, sum)
page %>%
ggplot(aes(x=date,y=sessions,group=page_name, colour=page_name)) +
geom_line()  +
theme(axis.text.x = element_text(angle = 90, hjust = 1), legend.position="none")
+  scale_x_date(date_breaks = "40 days", date_labels = "%Y-%m-%d")
gadata <- get_data(vid=vid, from=from, to=to, dim=dim, met=met, max=max)
gadata = filter(gadata, !grepl("Caleb", dimension1) & !grepl('Cannon', dimension1) & !grepl('Levy', dimension1))
gadata$date <- as.Date(gadata$date , "%Y-%m-%d")
page <- aggregate(sessions ~ (date), gadata, sum)
page %>%
ggplot(aes(x=date,y=sessions,group=page_name, colour=page_name)) +
geom_line()  +
theme(axis.text.x = element_text(angle = 90, hjust = 1), legend.position="none")
+  scale_x_date(date_breaks = "40 days", date_labels = "%Y-%m-%d")
gadata <- get_data(vid=vid, from=from, to=to, dim=dim, met=met, max=max)
gadata = filter(gadata, !grepl("Caleb", dimension1) & !grepl('Cannon', dimension1) & !grepl('Levy', dimension1))
gadata$date <- as.Date(gadata$date , "%Y-%m-%d")
page <- aggregate(sessions ~ date, gadata, sum)
page %>%
ggplot(aes(x=date,y=sessions,group=page_name, colour=page_name)) +
geom_line()  +
theme(axis.text.x = element_text(angle = 90, hjust = 1), legend.position="none")
+  scale_x_date(date_breaks = "40 days", date_labels = "%Y-%m-%d")
page %>%
ggplot(aes(x=date,y=sessions,
#group=page_name,
colour=page_name)) +
geom_line()  +
theme(axis.text.x = element_text(angle = 90, hjust = 1), legend.position="none")
+  scale_x_date(date_breaks = "40 days", date_labels = "%Y-%m-%d")
page %>%
ggplot(aes(x=date,y=sessions
#,group=page_name
,colour=page_name
)) +
geom_line()  +
theme(axis.text.x = element_text(angle = 90, hjust = 1), legend.position="none")
+  scale_x_date(date_breaks = "40 days", date_labels = "%Y-%m-%d")
page %>%
ggplot(aes(x=date,y=sessions
#,group=page_name
#,colour=page_name
)) +
geom_line()  +
theme(axis.text.x = element_text(angle = 90, hjust = 1), legend.position="none")
+  scale_x_date(date_breaks = "40 days", date_labels = "%Y-%m-%d")
page %>%
ggplot(aes(x=date,y=sessions
#,group=page_name
#,colour=page_name
)) +
geom_line()  +
theme(axis.text.x = element_text(angle = 90, hjust = 1), legend.position="none")
+  scale_x_date(date_breaks = "20 days", date_labels = "%Y-%m-%d")
page %>%
ggplot(aes(x=date,y=sessions
#,group=page_name
#,colour=page_name
)) +
geom_line()  +
theme(axis.text.x = element_text(angle = 90, hjust = 1), legend.position="none")
#+  scale_x_date(date_breaks = "20 days", date_labels = "%Y-%m-%d")
df <- dim_filter("countryIsoCode","EXACT","US",not = F)
df2 <- dim_filter("dimension1","PARTIAL","tanner",not = F, caseSensitive = F)
fc2 <- filter_clause_ga4(list(df, df2), operator = "AND")
max = 2000
met = c("sessions",
#"pageviews",
"entrances","bounces")
dim = c(
"date",
"ga:dimension1",
#'ga:dimension2',
#'region',
#'city',
'pagePath'
)
# the function
get_data <- function(vid, from, to, dim, met, max) {
df <- google_analytics(viewId = vid,
date_range = c(from, to),
metrics = met,
dimensions = dim,
#met_filters = fc,
dim_filters = fc2,
max = max)
# clean up and set class
df[,1] <- gsub(" / ", "/", df[,1])              # remove spacing
df[,1] <- gsub(":?(NA|CLICK|NA):?", "", df[,1]) # remove CLICK and NA
#df[,2] <- as.numeric(df[,2])                    # conversion column is character :-/
df$page_name <- sapply(df$pagePath, basename)
df$page_name= gsub("-", ' ', df$page_name)
df$page_name= sapply(df$page_name, simpleCap)
refcols <- c("page_name", 'dimension1')
df <- df[, c(refcols, setdiff(names(df), refcols))]
df$pagePath <- NULL
df$page_name = gsub("^([^?]*?)?.*$", "\\1",df$page_name)
#df$page_name <- gsub("\\?*","", df$page_name[])
#df$page_name <- strsplit(df$page_name[1], split = '?',fixed = T)
#df$pagePath <- sub("(.+?)[./].+", "\\1", sapply(df$pagePath, function(x) parse_url(x)$path, USE.NAMES = FALSE))
df
}
gadata <- get_data(vid=vid, from=from, to=to, dim=dim, met=met, max=max)
gadata = filter(gadata, !grepl("Caleb", dimension1) & !grepl('Cannon', dimension1) & !grepl('Levy', dimension1))
gadata$date <- as.Date(gadata$date , "%Y-%m-%d")
page <- aggregate(sessions ~ date, gadata, sum)
# date range
from <- "2016-05-01"
to   <- "2018-09-30"
## create filters on dimensions
df <- dim_filter("countryIsoCode","EXACT","US",not = F)
df2 <- dim_filter("dimension1","PARTIAL","tanner",not = F, caseSensitive = F)
fc2 <- filter_clause_ga4(list(df, df2), operator = "AND")
max = 100000
met = c("sessions",
#"pageviews",
"entrances","bounces")
dim = c(
"date",
"ga:dimension1",
#'ga:dimension2',
#'region',
#'city',
'pagePath'
)
# the function
get_data <- function(vid, from, to, dim, met, max) {
df <- google_analytics(viewId = vid,
date_range = c(from, to),
metrics = met,
dimensions = dim,
#met_filters = fc,
dim_filters = fc2,
max = max)
# clean up and set class
df[,1] <- gsub(" / ", "/", df[,1])              # remove spacing
df[,1] <- gsub(":?(NA|CLICK|NA):?", "", df[,1]) # remove CLICK and NA
#df[,2] <- as.numeric(df[,2])                    # conversion column is character :-/
df$page_name <- sapply(df$pagePath, basename)
df$page_name= gsub("-", ' ', df$page_name)
df$page_name= sapply(df$page_name, simpleCap)
refcols <- c("page_name", 'dimension1')
df <- df[, c(refcols, setdiff(names(df), refcols))]
df$pagePath <- NULL
df$page_name = gsub("^([^?]*?)?.*$", "\\1",df$page_name)
#df$page_name <- gsub("\\?*","", df$page_name[])
#df$page_name <- strsplit(df$page_name[1], split = '?',fixed = T)
#df$pagePath <- sub("(.+?)[./].+", "\\1", sapply(df$pagePath, function(x) parse_url(x)$path, USE.NAMES = FALSE))
df
}
gadata <- get_data(vid=vid, from=from, to=to, dim=dim, met=met, max=max)
gadata = filter(gadata, !grepl("Caleb", dimension1) & !grepl('Cannon', dimension1) & !grepl('Levy', dimension1))
gadata$date <- as.Date(gadata$date , "%Y-%m-%d")
page <- aggregate(sessions ~ date, gadata, sum)
page %>%
ggplot(aes(x=date,y=sessions
,group=page_name
,colour=page_name
)) +
geom_line()  +
theme(axis.text.x = element_text(angle = 90, hjust = 1), legend.position="none")
page <- aggregate(sessions ~ date + page_name, gadata, sum)
page %>%
ggplot(aes(x=date,y=sessions
,group=page_name
,colour=page_name
)) +
geom_line()  +
theme(axis.text.x = element_text(angle = 90, hjust = 1), legend.position="none")
bar <- aggregate(sessions ~ page_name, gadata, sum)
ggplot(data=bar, aes(x=page_name, y=sessions)) +
geom_bar(stat="identity", width=0.5)
View(bar)
bar <- aggregate(page_name ~ sessions, gadata, sum)
ggplot(data=bar, aes(x=page_name, y=sessions)) +
geom_bar(stat="identity", width=0.5)
getwd()
setwd('/Users/rorr/Desktop/Welfare_Policy/Data/Data_Explorations/Google_Analytics(Cato)')
# This installs googleAnalyticsR if you haven't got it installed already
if(!require(googleAnalyticsR)) install.packages("googleAnalyticsR")
#library("tidyverse")
library(googleAnalyticsR)
library(dplyr)
library(httr)
#library(googleAuthR)
library(ggplot2)
simpleCap <- function(x) {
s <- strsplit(x, " ")[[1]]
paste(toupper(substring(s, 1,1)), substring(s, 2),
sep="", collapse=" ")
}
getwd()
setwd('/Users/rorr/Desktop/Welfare_Policy/Data/Data_Explorations/Google_Analytics(Cato)')
# This installs googleAnalyticsR if you haven't got it installed already
if(!require(googleAnalyticsR)) install.packages("googleAnalyticsR")
#library("tidyverse")
library(googleAnalyticsR)
library(dplyr)
library(httr)
library(RCurl)
library(XML)
library(stringr)
#library(googleAuthR)
library(ggplot2)
simpleCap <- function(x) {
s <- strsplit(x, " ")[[1]]
paste(toupper(substring(s, 1,1)), substring(s, 2),
sep="", collapse=" ")
}
ga_auth('ga.httr-oauth')
getwd()
setwd('/Users/rorr/Desktop/Welfare_Policy/Data/Data_Explorations/Google_Analytics(Cato)')
# This installs googleAnalyticsR if you haven't got it installed already
if(!require(googleAnalyticsR)) install.packages("googleAnalyticsR")
#library("tidyverse")
library(googleAnalyticsR)
library(dplyr)
library(httr)
library(RCurl)
library(XML)
library(stringr)
#library(googleAuthR)
library(ggplot2)
simpleCap <- function(x) {
s <- strsplit(x, " ")[[1]]
paste(toupper(substring(s, 1,1)), substring(s, 2),
sep="", collapse=" ")
}
ga_auth('ga.httr-oauth')
