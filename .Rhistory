plot(CC_2y$childcare_avg,CC_2y$license_avg,main="States: Licensure vs. Childcare (CPS POOLED: 17+18)",ylab="Required Licensure Rate for Childcare workers", xlab="childcare expenditures per child")
abline(lm(CC_2y$license_avg~CC_2y$childcare_avg),col = "red")
dev.print(pdf, '/Users/rorr/Desktop/Welfare_Policy/Data/R - Survey data/Current Population Survey (CPS)/Licensure Images/Childcare_17&18.pdf')
plot(CC_2y$childcare_share_avg,CC_2y$license_avg,main="States: Licensure vs. Childcare Share (CPS POOLED: 17+18)",ylab="Required Licensure Rate for Childcare workers", xlab="Average per child Household expenditures on childcare as a share of average state income")
abline(lm(CC_2y$license_avg~CC_2y$childcare_share_avg),col="red")
dev.print(pdf, '/Users/rorr/Desktop/Welfare_Policy/Data/R - Survey data/Current Population Survey (CPS)/Licensure Images/Childcare_share_17&18.pdf')
plot(CC_2y$childcare_share_avg,CC_2y$license_avg,main="States: Licensure vs. Childcare Share (CPS POOLED: 17+18)",ylab="Required Licensure Rate for Childcare workers", xlab="Average per child Household exp. on childcare as a share of state's average household income")
plot(CC_2y$childcare_share_avg,CC_2y$license_avg,main="States: Licensure vs. Childcare Share (CPS POOLED: 17+18)",ylab="Required Licensure Rate for Childcare workers", xlab="Average per child Household exp. on childcare \n as a share of state's average household income")
plot(CC_2y$childcare_share_avg,CC_2y$license_avg,main="States: Licensure vs. Childcare Share (CPS POOLED: 17+18)",ylab="Required Licensure Rate for Childcare workers", xlab="Average per child household expenditures on childcare \n as a share of state's average household income")
plot(CC_2y$childcare_share_avg,CC_2y$license_avg,main="States: Licensure vs. Childcare Share (CPS POOLED: 17+18)",ylab="Required Licensure Rate for Childcare workers", xlab="Average per child household expenditures on childcare \n as a share of state's average household income")
abline(lm(CC_2y$license_avg~CC_2y$childcare_share_avg),col="red")
dev.print(pdf, '/Users/rorr/Desktop/Welfare_Policy/Data/R - Survey data/Current Population Survey (CPS)/Licensure Images/Childcare_share_17&18.pdf')
plot(CC_2y$childcare_avg,CC_2y$license_avg,main="States: Licensure vs. Childcare (CPS POOLED: 17+18)",ylab="Required Licensure Rate for Childcare workers", xlab="childcare expenditures per child")
abline(lm(CC_2y$license_avg~CC_2y$childcare_avg),col = "red")
dev.print(pdf, '/Users/rorr/Desktop/Welfare_Policy/Data/R - Survey data/Current Population Survey (CPS)/Licensure Images/Childcare_17&18.pdf')
plot(CC_2y$childcare_share_avg,CC_2y$license_avg,main="States: Licensure vs. Childcare Share (CPS POOLED: 17+18)",ylab="Required Licensure Rate for Childcare workers", xlab="Average per child household expenditures on childcare \n as a share of state's average household income")
abline(lm(CC_2y$license_avg~CC_2y$childcare_share_avg),col="red")
dev.print(pdf, '/Users/rorr/Desktop/Welfare_Policy/Data/R - Survey data/Current Population Survey (CPS)/Licensure Images/Childcare_share_17&18.pdf')
lm(CC_2y$license_avg~CC_2y$childcare_share_avg),col="red")
lm(CC_2y$license_avg~CC_2y$childcare_share_avg)
CC_2y_model=lm(CC_2y$license_avg~CC_2y$childcare_share_avg)
CC_2y_model
dev.off()
CC_license_17=svyby(~I(license3 * 100), by=~gestfips, design=subset(z2017,peioocc==4600),svymean)
CC_license_18=svyby(~I(license3 * 100), by=~gestfips, design=subset(z2018,peioocc==4600),svymean)
colnames(CC_license_17)[colnames(CC_license_17)=="I(license3 * 100)"]="LicenseReq_17"
colnames(CC_license_18)[colnames(CC_license_18)=="I(license3 * 100)"]="LicenseReq_18"
CC_license_2y=merge(CC_license_17, CC_license_18, by = "gestfips")
CC_license_2y$license_avg=(CC_license_2y$LicenseReq_17+CC_license_2y$LicenseReq_18)/2
CC_spending_17=svyby(~care_val_pk+htotval, by=~gestfips, design=subset(z2017,care_val>0&a_exprrp%in%1:2),svymean)
CC_spending_18=svyby(~care_val_pk+htotval, by=~gestfips, design=subset(z2018,care_val>0&a_exprrp%in%1:2),svymean)
colnames(CC_spending_17)[colnames(CC_spending_17)=="care_val_pk"]="childcare_17"
colnames(CC_spending_18)[colnames(CC_spending_18)=="care_val_pk"]="childcare_18"
CC_spending_17$CC_spending_share_17=(CC_spending_17$childcare_17/CC_spending_17$htotval)*100
CC_spending_18$CC_spending_share_18=(CC_spending_18$childcare_18/CC_spending_18$htotval)*100
CC_spending_2y=merge(CC_spending_17, CC_spending_18, by = "gestfips")
CC_spending_2y$childcare_avg=(CC_spending_2y$childcare_17+CC_spending_2y$childcare_18)/2
CC_spending_2y$childcare_share_avg=(CC_spending_2y$CC_spending_share_17+CC_spending_2y$CC_spending_share_18)/2
CC_2y	=	merge(CC_license_2y, CC_spending_2y, by = "gestfips")
CC_2y=merge(state, CC_2y, by = "gestfips")
plot(CC_2y$childcare_avg,CC_2y$license_avg,main="States: Licensure vs. Childcare (CPS POOLED: 17+18)",ylab="Required Licensure Rate for Childcare workers", xlab="childcare expenditures per child")
abline(lm(CC_2y$license_avg~CC_2y$childcare_avg),col = "red")
dev.print(pdf, '/Users/rorr/Desktop/Welfare_Policy/Data/R - Survey data/Current Population Survey (CPS)/Licensure Images/Childcare_17&18.pdf')
plot(CC_2y$childcare_share_avg,CC_2y$license_avg,main="States: Licensure vs. Childcare Share (CPS POOLED: 17+18)",ylab="Required Licensure Rate for Childcare workers", xlab="Average per child household expenditures on childcare \n as a share of state's average household income")
abline(lm(CC_2y$license_avg~CC_2y$childcare_share_avg),col="red")
CC_2y_model=lm(CC_2y$license_avg~CC_2y$childcare_share_avg)
dev.print(pdf, '/Users/rorr/Desktop/Welfare_Policy/Data/R - Survey data/Current Population Survey (CPS)/Licensure Images/Childcare_share_17&18.pdf')
plot(CC_2y$childcare_share_avg,CC_2y$license_avg,main="States: Licensure vs. Childcare Share (CPS POOLED: 17+18)",ylab="Required Licensure Rate for Childcare workers", xlab="Average per child household expenditures on childcare \n as a share of state's average household income")
abline(lm(CC_2y$license_avg~CC_2y$childcare_share_avg),col="red")
CC_2y_model=lm(CC_2y$license_avg~CC_2y$childcare_share_avg)
dev.print(pdf, '/Users/rorr/Desktop/Welfare_Policy/Data/R - Survey data/Current Population Survey (CPS)/Licensure Images/Childcare_share_17&18.pdf')
summary(CC_2y_model)
plot(CC_2y$childcare_share_avg,CC_2y$license_avg,main="States: Licensure vs. Childcare Share (CPS POOLED: 17+18)",ylab="Required Licensure Rate for Childcare workers", xlab="Average per child household expenditures on childcare \n as a share of state's average household income")
abline(lm(CC_2y$license_avg~CC_2y$childcare_share_avg),col="red")
plot(CC_2y$childcare_avg,CC_2y$license_avg,main="States: Licensure vs. Childcare (CPS POOLED: 17+18)",ylab="Required Licensure Rate for Childcare workers", xlab="childcare expenditures per child")
abline(lm(CC_2y$license_avg~CC_2y$childcare_avg),col = "red")
plot(CC_2y$childcare_share_avg,CC_2y$license_avg,main="States: Licensure vs. Childcare Share (CPS POOLED: 17+18)",ylab="Required Licensure Rate for Childcare workers", xlab="Average per child household expenditures on childcare \n as a share of state's average household income")
abline(lm(CC_2y$license_avg~CC_2y$childcare_share_avg),col="red")
CC_2y_model=lm(CC_2y$license_avg~CC_2y$childcare_share_avg)
plot(CC_2y$childcare_avg,CC_2y$license_avg,main="States: Licensure vs. Childcare (CPS POOLED: 17+18)",ylab="Required Licensure Rate for Childcare workers", xlab="childcare expenditures per child")
abline(lm(CC_2y$license_avg~CC_2y$childcare_avg),col = "red")
summary(CC_2y_model)
View(CC_2y)
dev.off()
CC_license_17=svyby(~I(license3 * 100), by=~gestfips, design=subset(z2017,peioocc==4600),svymean)
CC_license_18=svyby(~I(license3 * 100), by=~gestfips, design=subset(z2018,peioocc==4600),svymean)
colnames(CC_license_17)[colnames(CC_license_17)=="I(license3 * 100)"]="LicenseReq_17"
colnames(CC_license_18)[colnames(CC_license_18)=="I(license3 * 100)"]="LicenseReq_18"
CC_license_2y=merge(CC_license_17, CC_license_18, by = "gestfips")
CC_license_2y$license_avg=(CC_license_2y$LicenseReq_17+CC_license_2y$LicenseReq_18)/2
CC_spending_17=svyby(~care_val_pk+htotval, by=~gestfips, design=subset(z2017,care_val>0&a_exprrp%in%1:2),svymean)
CC_spending_18=svyby(~care_val_pk+htotval, by=~gestfips, design=subset(z2018,care_val>0&a_exprrp%in%1:2),svymean)
colnames(CC_spending_17)[colnames(CC_spending_17)=="care_val_pk"]="childcare_17"
colnames(CC_spending_18)[colnames(CC_spending_18)=="care_val_pk"]="childcare_18"
colnames(CC_spending_17)[colnames(CC_spending_17)=="htotval"]="avg_hinc_17"
colnames(CC_spending_18)[colnames(CC_spending_18)=="htotval"]="avg_hinc_18"
CC_spending_17$CC_spending_share_17=(CC_spending_17$childcare_17/CC_spending_17$avg_hinc_17)*100
CC_spending_18$CC_spending_share_18=(CC_spending_18$childcare_18/CC_spending_18$avg_hinc_18)*100
CC_spending_2y=merge(CC_spending_17, CC_spending_18, by = "gestfips")
CC_spending_2y$avg_hinc_2y=(CC_spending_2y$avg_hinc_17+CC_spending_2y$avg_hinc_18)/2
CC_spending_2y$childcare_avg=(CC_spending_2y$childcare_17+CC_spending_2y$childcare_18)/2
CC_spending_2y$childcare_share_avg=(CC_spending_2y$CC_spending_share_17+CC_spending_2y$CC_spending_share_18)/2
CC_2y	=	merge(CC_license_2y, CC_spending_2y, by = "gestfips")
CC_2y=merge(state, CC_2y, by = "gestfips")
plot(CC_2y$childcare_avg,CC_2y$license_avg,main="States: Licensure vs. Childcare (CPS POOLED: 17+18)",ylab="Required Licensure Rate for Childcare workers", xlab="childcare expenditures per child")
abline(lm(CC_2y$license_avg~CC_2y$childcare_avg),col = "red")
dev.print(pdf, '/Users/rorr/Desktop/Welfare_Policy/Data/R - Survey data/Current Population Survey (CPS)/Licensure Images/Childcare_17&18.pdf')
plot(CC_2y$childcare_share_avg,CC_2y$license_avg,main="States: Licensure vs. Childcare Share (CPS POOLED: 17+18)",ylab="Required Licensure Rate for Childcare workers", xlab="Average per child household expenditures on childcare \n as a share of state's average household income")
abline(lm(CC_2y$license_avg~CC_2y$childcare_share_avg),col="red")
CC_2y_model=lm(CC_2y$license_avg~CC_2y$childcare_avg+CC_2y$avg_hinc_2y)
summary(CC_2y_model)
dev.off()
CC_license_1Y=svyby(~I(license3 * 100), by=~gestfips, design=subset(z2018,peioocc==4600),svymean)
colnames(CC_license_1Y)[colnames(CC_license_1Y)=="I(license3 * 100)"]="license_avg"
CC_spending_1Y=svyby(~care_val_pk, by=~gestfips, design=subset(z2018,care_val>0&a_exprrp%in%1:2),svymean)
CC_f1Y	=	merge(CC_license_1Y, CC_spending_1Y, by = "gestfips")
CC_f1Y=merge(state, CC_f1Y, by = "gestfips")
plot(CC_f1Y$care_val_pk,CC_f1Y$license_avg,main="States: Licensure vs. Childcare",ylab="Required Licensure Rate for Childcare workers", xlab="childcare expenditures per child")
abline(lm(CC_f1Y$license_avg~CC_f1Y$care_val_pk), col = "blue")
dev.print(pdf, '/Users/rorr/Desktop/Welfare_Policy/Data/R - Survey data/Current Population Survey (CPS)/Licensure Images/Childcare_17&18.pdf')
dev.off()
CC_license_17=svyby(~I(license3 * 100), by=~gestfips, design=subset(z2017,peioocc==4600),svymean)
CC_license_18=svyby(~I(license3 * 100), by=~gestfips, design=subset(z2018,peioocc==4600),svymean)
colnames(CC_license_17)[colnames(CC_license_17)=="I(license3 * 100)"]="LicenseReq_17"
colnames(CC_license_18)[colnames(CC_license_18)=="I(license3 * 100)"]="LicenseReq_18"
CC_license_2y=merge(CC_license_17, CC_license_18, by = "gestfips")
CC_license_2y$license_avg=(CC_license_2y$LicenseReq_17+CC_license_2y$LicenseReq_18)/2
CC_spending_17=svyby(~care_val_pk+htotval, by=~gestfips, design=subset(z2017,care_val>0&a_exprrp%in%1:2),svymean)
CC_spending_18=svyby(~care_val_pk+htotval, by=~gestfips, design=subset(z2018,care_val>0&a_exprrp%in%1:2),svymean)
colnames(CC_spending_17)[colnames(CC_spending_17)=="care_val_pk"]="childcare_17"
colnames(CC_spending_18)[colnames(CC_spending_18)=="care_val_pk"]="childcare_18"
colnames(CC_spending_17)[colnames(CC_spending_17)=="htotval"]="avg_hinc_17"
colnames(CC_spending_18)[colnames(CC_spending_18)=="htotval"]="avg_hinc_18"
CC_spending_17$CC_spending_share_17=(CC_spending_17$childcare_17/CC_spending_17$avg_hinc_17)*100
CC_spending_18$CC_spending_share_18=(CC_spending_18$childcare_18/CC_spending_18$avg_hinc_18)*100
CC_spending_2y=merge(CC_spending_17, CC_spending_18, by = "gestfips")
CC_spending_2y$avg_hinc_2y=(CC_spending_2y$avg_hinc_17+CC_spending_2y$avg_hinc_18)/2
CC_spending_2y$childcare_avg=(CC_spending_2y$childcare_17+CC_spending_2y$childcare_18)/2
CC_spending_2y$childcare_share_avg=(CC_spending_2y$CC_spending_share_17+CC_spending_2y$CC_spending_share_18)/2
CC_2y	=	merge(CC_license_2y, CC_spending_2y, by = "gestfips")
CC_2y=merge(state, CC_2y, by = "gestfips")
plot(CC_2y$childcare_avg,CC_2y$license_avg,main="States: Licensure vs. Childcare (CPS POOLED: 17+18)",ylab="Required Licensure Rate for Childcare workers", xlab="childcare expenditures per child")
abline(lm(CC_2y$license_avg~CC_2y$childcare_avg),col = "red")
dev.print(pdf, '/Users/rorr/Desktop/Welfare_Policy/Data/R - Survey data/Current Population Survey (CPS)/Licensure Images/Childcare_17&18.pdf')
CC_2y_model=lm(CC_2y$license_avg~CC_2y$childcare_avg+CC_2y$avg_hinc_2y)
summary(CC_2y_model)
plot(CC_2y$childcare_share_avg,CC_2y$license_avg,main="States: Licensure vs. Childcare Share (CPS POOLED: 17+18)",ylab="Required Licensure Rate for Childcare workers", xlab="Average per child household expenditures on childcare \n as a share of state's average household income")
abline(lm(CC_2y$license_avg~CC_2y$childcare_share_avg),col="red")
dev.print(pdf, '/Users/rorr/Desktop/Welfare_Policy/Data/R - Survey data/Current Population Survey (CPS)/Licensure Images/Childcare_share_17&18.pdf')
# Single Year childcare
dev.off()
CC_license_1Y=svyby(~I(license3 * 100), by=~gestfips, design=subset(z2018,peioocc==4600),svymean)
colnames(CC_license_1Y)[colnames(CC_license_1Y)=="I(license3 * 100)"]="license_avg"
CC_spending_1Y=svyby(~care_val_pk, by=~gestfips, design=subset(z2018,care_val>0&a_exprrp%in%1:2),svymean)
CC_f1Y	=	merge(CC_license_1Y, CC_spending_1Y, by = "gestfips")
CC_f1Y=merge(state, CC_f1Y, by = "gestfips")
plot(CC_f1Y$care_val_pk,CC_f1Y$license_avg,main="States: Licensure vs. Childcare",ylab="Required Licensure Rate for Childcare workers", xlab="childcare expenditures per child")
abline(lm(CC_f1Y$license_avg~CC_f1Y$care_val_pk), col = "blue")
dev.print(pdf, '/Users/rorr/Desktop/Welfare_Policy/Data/R - Survey data/Current Population Survey (CPS)/Licensure Images/Childcare_18.pdf')
#### Percent of budget - Childcare ####
dev.off()
CC_license_17=svyby(~I(license3 * 100), by=~gestfips, design=subset(z2017,peioocc==4600),svymean)
CC_license_18=svyby(~I(license3 * 100), by=~gestfips, design=subset(z2018,peioocc==4600),svymean)
colnames(CC_license_17)[colnames(CC_license_17)=="I(license3 * 100)"]="LicenseReq_17"
colnames(CC_license_18)[colnames(CC_license_18)=="I(license3 * 100)"]="LicenseReq_18"
CC_license_2y=merge(CC_license_17, CC_license_18, by = "gestfips")
CC_license_2y$license_avg=(CC_license_2y$LicenseReq_17+CC_license_2y$LicenseReq_18)/2
CC_spending_17=svyby(~care_val_pk+htotval, by=~gestfips, design=subset(z2017,care_val>0&a_exprrp%in%1:2),svymean)
CC_spending_18=svyby(~care_val_pk+htotval, by=~gestfips, design=subset(z2018,care_val>0&a_exprrp%in%1:2),svymean)
colnames(CC_spending_17)[colnames(CC_spending_17)=="care_val_pk"]="childcare_17"
colnames(CC_spending_18)[colnames(CC_spending_18)=="care_val_pk"]="childcare_18"
colnames(CC_spending_17)[colnames(CC_spending_17)=="htotval"]="avg_hinc_17"
colnames(CC_spending_18)[colnames(CC_spending_18)=="htotval"]="avg_hinc_18"
CC_spending_17$CC_spending_share_17=(CC_spending_17$childcare_17/CC_spending_17$avg_hinc_17)*100
CC_spending_18$CC_spending_share_18=(CC_spending_18$childcare_18/CC_spending_18$avg_hinc_18)*100
CC_spending_2y=merge(CC_spending_17, CC_spending_18, by = "gestfips")
CC_spending_2y$avg_hinc_2y=(CC_spending_2y$avg_hinc_17+CC_spending_2y$avg_hinc_18)/2
CC_spending_2y$childcare_avg=(CC_spending_2y$childcare_17+CC_spending_2y$childcare_18)/2
CC_spending_2y$childcare_share_avg=(CC_spending_2y$CC_spending_share_17+CC_spending_2y$CC_spending_share_18)/2
CC_2y	=	merge(CC_license_2y, CC_spending_2y, by = "gestfips")
CC_2y=merge(state, CC_2y, by = "gestfips")
plot(CC_2y$childcare_avg,CC_2y$license_avg,main="States: Licensure vs. Childcare (CPS POOLED: 17+18)",ylab="Required Licensure Rate for Childcare workers", xlab="childcare expenditures per child")
abline(lm(CC_2y$license_avg~CC_2y$childcare_avg),col = "red")
dev.print(pdf, '/Users/rorr/Desktop/Welfare_Policy/Data/R - Survey data/Current Population Survey (CPS)/Licensure Images/Childcare_17&18.pdf')
CC_2y_model=lm(CC_2y$license_avg~CC_2y$childcare_avg+CC_2y$avg_hinc_2y)
summary(CC_2y_model)
plot(CC_2y$childcare_share_avg,CC_2y$license_avg,main="States: Licensure vs. Childcare Share (CPS POOLED: 17+18)",ylab="Required Licensure Rate for Childcare workers", xlab="Average per child household expenditures on childcare \n as a share of state's average household income")
abline(lm(CC_2y$license_avg~CC_2y$childcare_share_avg),col="red")
dev.print(pdf, '/Users/rorr/Desktop/Welfare_Policy/Data/R - Survey data/Current Population Survey (CPS)/Licensure Images/Childcare_share_17&18.pdf')
# Single Year childcare
dev.off()
CC_license_1Y=svyby(~I(license3 * 100), by=~gestfips, design=subset(z2018,peioocc==4600),svymean)
colnames(CC_license_1Y)[colnames(CC_license_1Y)=="I(license3 * 100)"]="license_avg"
CC_spending_1Y=svyby(~care_val_pk, by=~gestfips, design=subset(z2018,care_val>0&a_exprrp%in%1:2),svymean)
CC_f1Y	=	merge(CC_license_1Y, CC_spending_1Y, by = "gestfips")
CC_f1Y=merge(state, CC_f1Y, by = "gestfips")
plot(CC_f1Y$care_val_pk,CC_f1Y$license_avg,main="States: Licensure vs. Childcare",ylab="Required Licensure Rate for Childcare workers", xlab="childcare expenditures per child")
abline(lm(CC_f1Y$license_avg~CC_f1Y$care_val_pk), col = "blue")
dev.print(pdf, '/Users/rorr/Desktop/Welfare_Policy/Data/R - Survey data/Current Population Survey (CPS)/Licensure Images/Childcare_18.pdf')
lines(moc_31,col=palette[31]);lines(moc_32,col=palette[32])
g_0_25000=svyby(~I(license3*100),by=~male,subset(z2018_work_age,ern_val%in%0:25000),svymean);g_25001_50000=svyby(~I(license3*100),by=~male,subset(z2018_work_age,ern_val%in%25001:50000),svymean)
svylorenz(~ern_val,subset(z2018_work_age,license3==1&ern_val>=0&a_hga%in%39:40&a_sex==1),seq(0,1,.025),alpha=.1,curve.col=palette[2],add=TRUE )
svylorenz(~ern_val,subset(z2018_work_age,license3==1&ern_val>=0&a_hga%in%43&a_sex==1),seq(0,1,.025),alpha=.1,curve.col=palette[3],add=TRUE)
svylorenz(~ern_val,subset(z2018_work_age,license3==1&ern_val>=0&a_hga%in%44&a_sex==1),seq(0,1,.025),alpha=.1,curve.col=palette[4],add=TRUE)
svylorenz(~ern_val,subset(z2018_work_age,license3==1&ern_val>=0&a_hga%in%45&a_sex==1),seq(0,1,.025),alpha=.1,curve.col=palette[5],add=TRUE)
svylorenz(~ern_val,subset(z2018_work_age,license3==1&ern_val>=0&a_hga%in%46&a_sex==1),seq(0,1,.025),alpha=.1,curve.col=palette[6],add=TRUE)
svylorenz(~ern_val,subset(z2018_work_age,license3==1&ern_val>=0&a_hga%in%39:40&a_sex==2),seq(0,1,.025),alpha=.1,curve.col=palette[8],add=TRUE )
svylorenz(~ern_val,subset(z2018_work_age,license3==1&ern_val>=0&a_hga%in%43&a_sex==2),seq(0,1,.025),alpha=.1,curve.col=palette[9],add=TRUE)
svylorenz(~ern_val,subset(z2018_work_age,license3==1&ern_val>=0&a_hga%in%44&a_sex==2),seq(0,1,.025),alpha=.1,curve.col=palette[10],add=TRUE)
svylorenz(~ern_val,subset(z2018_work_age,license3==1&ern_val>=0&a_hga%in%45&a_sex==2),seq(0,1,.025),alpha=.1,curve.col=palette[11],add=TRUE)
svylorenz(~ern_val,subset(z2018_work_age,license3==1&ern_val>=0&a_hga%in%46&a_sex==2),seq(0,1,.025),alpha=.1,curve.col=palette[12],add=TRUE)
legend("topleft",lty=c(1,1),col=c(palette[1],palette[2],palette[3],palette[4],palette[5],palette[6],palette[7],palette[],palette[9],palette[10],palette[11],palette[12])
,legend=c("No high school degree-Male","High school Male","Bachelor's degree-Male","Master's degree-Male","Professional school degree-Male","Doctorate degree-Male","No high school degree-Female","High school degree-Female","Bachelor's degree-Female","Master's degree-Female","Professional school degree-Female","Doctorate degree-Female"),bty="n")
led_1=svysmooth(I(100*license3)~ern_val,subset(z2018_work_age,ern_val>=0&a_hga%in%31:38),bandwidth=10000);lines(led_1,col="black")
led_2=svysmooth(I(100*license3)~ern_val,subset(z2018_work_age,ern_val>=0&a_hga%in%39:40),bandwidth=10000);lines(led_2, col="deepskyblue")
led_3=svysmooth(I(100*license3)~ern_val,subset(z2018_work_age,ern_val>=0&a_hga%in%43),bandwidth=10000);lines(led_3, col="darkgreen")
led_4=svysmooth(I(100*license3)~ern_val,subset(z2017_work_age,ern_val>=0&a_hga%in%44),bandwidth=10000);lines(led_4,col="darkred")
led_5=svysmooth(I(100*license3)~ern_val,subset(z2017_work_age,ern_val>=0&a_hga%in%45),bandwidth=10000);lines(led_5, col="purple")
led_6=svysmooth(I(100*license3)~ern_val,subset(z2017_work_age,ern_val>=0&a_hga%in%46),bandwidth=10000);lines(led_6, col="orange")
# Race
plot(c(0,150000),c(0,50),type='n',xlab='yearly earnings',ylab='% job requires license')
legend("topright",lty=c(1,1),col=c("red","blue","green"),legend=c("White","Black","Asian"),bty="n")
lw=svysmooth(I(100*license3)~ern_val,subset(z2018_work_age,	ern_val>=0&prdtrace%in%1),bandwidth=NULL);lines(lw,col="red")
lb=svysmooth(I(100*license3)~ern_val,subset(z2018_work_age,ern_val>=0&prdtrace%in%2),bandwidth=NULL);lines(lb, col="blue")
la=svysmooth(I(100*license3)~ern_val,subset(z2018_work_age,ern_val>=0&	prdtrace%in%4),bandwidth=NULL);lines(la, col="green")
dev.print(pdf, '/Users/rorr/Desktop/Welfare_Policy/Data/R - Survey data/Current Population Survey (CPS)/Licensure Images/Race_Only.pdf')
# Race
plot(c(0,150000),c(0,50),type='n',xlab='yearly earnings',ylab='% job requires license')
legend("topright",lty=c(1,1),col=c("red","blue","green"),legend=c("White","Black","Asian"),bty="n")
lw=svysmooth(I(100*license3)~ern_val,subset(z2018_work_age,	ern_val>=0&prdtrace%in%1),bandwidth=NULL);lines(lw,col="red")
lb=svysmooth(I(100*license3)~ern_val,subset(z2018_work_age,ern_val>=0&prdtrace%in%2),bandwidth=NULL);lines(lb, col="blue")
la=svysmooth(I(100*license3)~ern_val,subset(z2018_work_age,ern_val>=0&	prdtrace%in%4),bandwidth=NULL);lines(la, col="green")
dev.print(pdf, '/Users/rorr/Desktop/Welfare_Policy/Data/R - Survey data/Current Population Survey (CPS)/Licensure Images/Race_Only.pdf')
tr17=svyby(~license3, by=~occup_name+occup_major+det_occupation_name, design=z2017_work_age,svymean, na.rm=T)
tr18=svyby(~license3, by=~occup_name+occup_major+det_occupation_name, design=z2018_work_age,svymean, na.rm=T)
tl17=svyby(~license2, by=~occup_name+occup_major+det_occupation_name, design=z2017_work_age,svymean, na.rm=T)
tl18=svyby(~license2, by=~occup_name+occup_major+det_occupation_name, design=z2018_work_age,svymean, na.rm=T)
t17=svyby(~one, by=~occup_name+occup_major+det_occupation_name, design=z2017_work_age,svytotal, na.rm=T)
t18=svyby(~one, by=~occup_name+occup_major+det_occupation_name, design=z2018_work_age,svytotal, na.rm=T)
g17=svyby(~male, by=~occup_name+occup_major+det_occupation_name, design=z2017_work_age,svymean, na.rm=T)
g18=svyby(~male, by=~occup_name+occup_major+det_occupation_name, design=z2018_work_age,svymean, na.rm=T)
colnames(tl17)[colnames(tl17)=="license2"]="license_rate_17"
colnames(tl18)[colnames(tl18)=="license2"]="license_rate_18"
colnames(tr17)[colnames(tr17)=="license3"]="license_req_rate_17"
colnames(tr18)[colnames(tr18)=="license3"]="license_req_rate_18"
colnames(tr17)[colnames(tr17)=="se"]="se_rate_17"
colnames(tr18)[colnames(tr18)=="se"]="se_rate_18"
colnames(t17)[colnames(t17)=="one"]="count_17"
colnames(t18)[colnames(t18)=="one"]="count_18"
colnames(t17)[colnames(t17)=="se"]="se_17"
colnames(t18)[colnames(t18)=="se"]="se_18"
colnames(g17)[colnames(g17)=="male"]="gender_17"
colnames(g18)[colnames(g18)=="male"]="gender_18"
colnames(g17)[colnames(g17)=="se"]="se_gender_17"
colnames(g18)[colnames(g18)=="se"]="se_gender_18"
tl=merge(tl17,tl18 , by=c('occup_name','occup_major','det_occupation_name'),all = T)
tr=merge(tr17,tr18 , by=c('occup_name','occup_major','det_occupation_name'),all = T)
t= merge( t17, t18 , by=c('occup_name','occup_major','det_occupation_name'),all = T)
g= merge( g17, g18 , by=c('occup_name','occup_major','det_occupation_name'),all = T)
emp_growth= merge( tr, t , by=c('occup_name','occup_major','det_occupation_name'),all = T)
emp_growth= merge( emp_growth, tl , by=c('occup_name','occup_major','det_occupation_name'),all = T)
emp_growth= merge( emp_growth, g , by=c('occup_name','occup_major','det_occupation_name'),all = T)
names(emp_growth)
emp_growth=subset(emp_growth,occup_name!='Not in universe or children'&occup_major!='Not in universe or children'&det_occupation_name!='Not in universe or children')
emp_growth$license_rate_avg <- with(emp_growth, ((license_rate_17*license_rate_18)/2)*100)
emp_growth$license_rate_Δ <- with(emp_growth, ((license_rate_17*license_rate_18)/2)*100)
emp_growth$license_req_rate_avg <- with(emp_growth, ((license_req_rate_17*license_req_rate_18)/2)*100)
emp_growth$license_req_rate_Δ <- with(emp_growth, ((license_req_rate_17*license_req_rate_18)/2)*100)
emp_growth$gender_avg <- with(emp_growth, ((gender_18/gender_17)-1)*100)
emp_growth$occ_rate_Δ <- with(emp_growth, ((count_18/count_17)-1)*100)
emp_growth$occ_number_Δ <- with(emp_growth, ((count_18-count_17)))
write.csv(emp_growth, "occupational_growth.csv")
tr17=svyby(~license3, by=~occup_name+occup_major+det_occupation_name, design=z2017_work_age,svymean, na.rm=T)
tr18=svyby(~license3, by=~occup_name+occup_major+det_occupation_name, design=z2018_work_age,svymean, na.rm=T)
tl17=svyby(~license2, by=~occup_name+occup_major+det_occupation_name, design=z2017_work_age,svymean, na.rm=T)
tl18=svyby(~license2, by=~occup_name+occup_major+det_occupation_name, design=z2018_work_age,svymean, na.rm=T)
t17=svyby(~one, by=~occup_name+occup_major+det_occupation_name, design=z2017_work_age,svytotal, na.rm=T)
t18=svyby(~one, by=~occup_name+occup_major+det_occupation_name, design=z2018_work_age,svytotal, na.rm=T)
g17=svyby(~male, by=~occup_name+occup_major+det_occupation_name, design=z2017_work_age,svymean, na.rm=T)
g18=svyby(~male, by=~occup_name+occup_major+det_occupation_name, design=z2018_work_age,svymean, na.rm=T)
colnames(tl17)[colnames(tl17)=="license2"]="license_rate_17"
colnames(tl18)[colnames(tl18)=="license2"]="license_rate_18"
colnames(tr17)[colnames(tr17)=="license3"]="license_req_rate_17"
colnames(tr18)[colnames(tr18)=="license3"]="license_req_rate_18"
colnames(tr17)[colnames(tr17)=="se"]="se_rate_17"
colnames(tr18)[colnames(tr18)=="se"]="se_rate_18"
colnames(tl17)[colnames(tl17)=="se"]="se_req_rate_17"
colnames(tl18)[colnames(tl18)=="se"]="se_req_rate_18"
colnames(t17)[colnames(t17)=="one"]="count_17"
colnames(t18)[colnames(t18)=="one"]="count_18"
colnames(t17)[colnames(t17)=="se"]="se_17"
colnames(t18)[colnames(t18)=="se"]="se_18"
colnames(g17)[colnames(g17)=="male"]="gender_17"
colnames(g18)[colnames(g18)=="male"]="gender_18"
colnames(g17)[colnames(g17)=="se"]="se_gender_17"
colnames(g18)[colnames(g18)=="se"]="se_gender_18"
tl=merge(tl17,tl18 , by=c('occup_name','occup_major','det_occupation_name'),all = T)
tr=merge(tr17,tr18 , by=c('occup_name','occup_major','det_occupation_name'),all = T)
t= merge( t17, t18 , by=c('occup_name','occup_major','det_occupation_name'),all = T)
g= merge( g17, g18 , by=c('occup_name','occup_major','det_occupation_name'),all = T)
emp_growth= merge( tr, t , by=c('occup_name','occup_major','det_occupation_name'),all = T)
emp_growth= merge( emp_growth, tl , by=c('occup_name','occup_major','det_occupation_name'),all = T)
emp_growth= merge( emp_growth, g , by=c('occup_name','occup_major','det_occupation_name'),all = T)
names(emp_growth)
emp_growth=subset(emp_growth,occup_name!='Not in universe or children'&occup_major!='Not in universe or children'&det_occupation_name!='Not in universe or children')
emp_growth$license_rate_avg <- with(emp_growth, ((license_rate_17*license_rate_18)/2)*100)
emp_growth$license_rate_Δ <- with(emp_growth, ((license_rate_17*license_rate_18)/2)*100)
emp_growth$license_req_rate_avg <- with(emp_growth, ((license_req_rate_17*license_req_rate_18)/2)*100)
emp_growth$license_req_rate_Δ <- with(emp_growth, ((license_req_rate_17*license_req_rate_18)/2)*100)
emp_growth$gender_avg <- with(emp_growth, ((gender_18/gender_17)-1)*100)
emp_growth$occ_rate_Δ <- with(emp_growth, ((count_18/count_17)-1)*100)
emp_growth$occ_number_Δ <- with(emp_growth, ((count_18-count_17)))
write.csv(emp_growth, "occupational_growth.csv")
svymean(~as.factor(male),z2018_work_age)
emp_growth$gender_avg <- with(emp_growth, ((gender_18/gender_17))*100)
emp_growth$occ_rate_Δ <- with(emp_growth, ((count_18/count_17)-1)*100)
emp_growth$occ_number_Δ <- with(emp_growth, ((count_18-count_17)))
write.csv(emp_growth, "occupational_growth.csv")
View(emp_growth)
z2017_labor=subset(z2017,prpertyp==2&a_age%in%25:64&pemlr%in%1:4)
z2018_labor=subset(z2018,prpertyp==2&a_age%in%25:64&pemlr%in%1:4)
tr17=svyby(~license3, by=~occup_name+occup_major+det_occupation_name, design=z2017_labor,svymean, na.rm=T)
tr18=svyby(~license3, by=~occup_name+occup_major+det_occupation_name, design=z2018_labor,svymean, na.rm=T)
tl17=svyby(~license2, by=~occup_name+occup_major+det_occupation_name, design=z2017_labor,svymean, na.rm=T)
tl18=svyby(~license2, by=~occup_name+occup_major+det_occupation_name, design=z2018_labor,svymean, na.rm=T)
t17=svyby(~one, by=~occup_name+occup_major+det_occupation_name, design=z2017_labor,svytotal, na.rm=T)
t18=svyby(~one, by=~occup_name+occup_major+det_occupation_name, design=z2018_labor,svytotal, na.rm=T)
g17=svyby(~male, by=~occup_name+occup_major+det_occupation_name, design=z2017_labor,svymean, na.rm=T)
g18=svyby(~male, by=~occup_name+occup_major+det_occupation_name, design=z2018_labor,svymean, na.rm=T)
colnames(tl17)[colnames(tl17)=="license2"]="license_rate_17"
colnames(tl18)[colnames(tl18)=="license2"]="license_rate_18"
colnames(tr17)[colnames(tr17)=="license3"]="license_req_rate_17"
colnames(tr18)[colnames(tr18)=="license3"]="license_req_rate_18"
colnames(tr17)[colnames(tr17)=="se"]="se_rate_17"
colnames(tr18)[colnames(tr18)=="se"]="se_rate_18"
colnames(tl17)[colnames(tl17)=="se"]="se_req_rate_17"
colnames(tl18)[colnames(tl18)=="se"]="se_req_rate_18"
colnames(t17)[colnames(t17)=="one"]="count_17"
colnames(t18)[colnames(t18)=="one"]="count_18"
colnames(t17)[colnames(t17)=="se"]="se_17"
colnames(t18)[colnames(t18)=="se"]="se_18"
colnames(g17)[colnames(g17)=="male"]="gender_17"
colnames(g18)[colnames(g18)=="male"]="gender_18"
colnames(g17)[colnames(g17)=="se"]="se_gender_17"
colnames(g18)[colnames(g18)=="se"]="se_gender_18"
#svymean(~as.factor(male),z2018_work_age)
tl=merge(tl17,tl18 , by=c('occup_name','occup_major','det_occupation_name'),all = T)
tr=merge(tr17,tr18 , by=c('occup_name','occup_major','det_occupation_name'),all = T)
t= merge( t17, t18 , by=c('occup_name','occup_major','det_occupation_name'),all = T)
g= merge( g17, g18 , by=c('occup_name','occup_major','det_occupation_name'),all = T)
emp_growth= merge( tr, t , by=c('occup_name','occup_major','det_occupation_name'),all = T)
emp_growth= merge( emp_growth, tl , by=c('occup_name','occup_major','det_occupation_name'),all = T)
emp_growth= merge( emp_growth, g , by=c('occup_name','occup_major','det_occupation_name'),all = T)
names(emp_growth)
emp_growth=subset(emp_growth,occup_name!='Not in universe or children'&occup_major!='Not in universe or children'&det_occupation_name!='Not in universe or children')
emp_growth$license_rate_avg <- with(emp_growth, ((license_rate_17*license_rate_18)/2)*100)
emp_growth$license_rate_Δ <- with(emp_growth, ((license_rate_17*license_rate_18)/2)*100)
emp_growth$license_req_rate_avg <- with(emp_growth, ((license_req_rate_17*license_req_rate_18)/2)*100)
emp_growth$license_req_rate_Δ <- with(emp_growth, ((license_req_rate_17*license_req_rate_18)/2)*100)
emp_growth$gender_avg <- with(emp_growth, ((gender_18/gender_17))*100)
emp_growth$occ_rate_Δ <- with(emp_growth, ((count_18/count_17)-1)*100)
emp_growth$occ_number_Δ <- with(emp_growth, ((count_18-count_17)))
write.csv(emp_growth, "occupational_growth.csv")
emp_growth=subset(emp_growth,occup_name!='Not in universe or children'&occup_major!='Not in universe or children'&det_occupation_name!='Not in universe or children')
emp_growth$license_rate_avg <- with(emp_growth, ((license_rate_17*license_rate_18)/2)*100)
emp_growth$license_rate_Δ <- with(emp_growth, ((license_rate_17*license_rate_18)/2)*100)
emp_growth$license_req_rate_avg <- with(emp_growth, ((license_req_rate_17*license_req_rate_18)/2)*100)
emp_growth$license_req_rate_Δ <- with(emp_growth, ((license_req_rate_17*license_req_rate_18)/2)*100)
emp_growth$gender_avg <- with(emp_growth, ((gender_18+gender_17))/2)
emp_growth$occ_rate_Δ <- with(emp_growth, ((count_18/count_17)-1)*100)
emp_growth$occ_number_Δ <- with(emp_growth, ((count_18-count_17)))
write.csv(emp_growth, "occupational_growth.csv")
library(lodown)
# examine all available CPSBASIC microdata files
cpsbasic_cat = get_catalog( "cpsbasic" ,
output_dir = file.path( path.expand( "~" ) , "CPSBASIC" ) )
#cpsbasic_cat <- subset( cpsbasic_cat , year%in%2015:2018)
cpsbasic_cat <- subset( cpsbasic_cat , year%in%2016:2018 & month%in%1:12 )
cpsbasic_cat <- lodown( "cpsbasic" , cpsbasic_cat )
View(cpsbasic_cat)
cpsbasic_cat <- subset( cpsbasic_cat , year%in%2018 & month%in%1:12 )
cpsbasic_cat = get_catalog( "cpsbasic" ,output_dir = file.path( path.expand( "~" ) , "CPSBASIC" ) )
#cpsbasic_cat <- subset( cpsbasic_cat , year%in%2015:2018)
cpsbasic_cat <- subset( cpsbasic_cat , year%in%2018 & month%in%1:12 )
cpsbasic_cat <- lodown( "cpsbasic" , cpsbasic_cat )
sessionInfo()
sessionInfo()
# installing/loading the package:
if(!require(installr)) {
install.packages("installr");
require(installr)
} #load / install+load installr
# Google Analytics
setwd("~/Desktop/Welfare_Policy/Data/Data_Explorations/Google_Analytics(Cato)")
library(tidyverse)
library(httr)
library(RCurl)
library(XML)
library(foreach)
library(stringr)
library(ggplot2)
library(data.table)
library(stringdist)
library(pbmcapply)
library(openxlsx)
library(tools)
#library(plyr)
load(file = "df_clean_type_date.RData")
SafeBody = function (url){
tryCatch({
doc=getURLContent(url)
doc = htmlParse(doc)
body = xpathSApply(doc, "//div[@class='field-body'][1]", xmlValue)
body =  gsub('\nNotes\n.*', '', body)
body =  gsub("\n", ' ', body)
body=trimws(body)
Sys.sleep(5)
return(body)},
error=function(e){cat("ERROR :", conditionMessage(e))}, '0')}
working_articles=subset(df_clean_type_date, working_date==T)
bigURL = unique(working_articles$pagePath)
bigURLsplit = split(bigURL, ceiling(seq_along(bigURL)/5000))
split2=bigURLsplit[[2]];Body2=pbmclapply(split2,SafeBody,mc.preschedule=T);save(Body2,file="Body2.RData");rm(split2)
SafeBody = function (url){
tryCatch({
doc=getURLContent(url)
doc = htmlParse(doc)
body = xpathSApply(doc, "//div[@class='field-body'][1]", xmlValue)
body =  gsub('\nNotes\n.*', '', body)
body =  gsub("\n", ' ', body)
body=trimws(body)
Sys.sleep(3)
return(body)},
error=function(e){cat("ERROR :", conditionMessage(e))}, '0')}
split2=bigURLsplit[[2]];Body2=pbmclapply(split2,SafeBody,mc.preschedule=T);save(Body2,file="Body2.RData");rm(split2)
split3=bigURLsplit[[3]];Body3=pbmclapply(split3,SafeBody,mc.preschedule=T);save(Body3,file="Body3.RData");rm(split3)
split4=bigURLsplit[[4]];Body4=pbmclapply(split4,SafeBody,mc.preschedule=T);save(Body4,file="Body4.RData");rm(split4)
split5=bigURLsplit[[5]];Body5=pbmclapply(split5,SafeBody,mc.preschedule=T);save(Body5,file="Body5.RData");rm(split5)
SafeBody = function (url){
tryCatch({
doc=getURLContent(url)
doc = htmlParse(doc)
body = xpathSApply(doc, "//div[@class='field-body'][1]", xmlValue)
body =  gsub('\nNotes\n.*', '', body)
body =  gsub("\n", ' ', body)
body=trimws(body)
Sys.sleep(2.5)
return(body)},
error=function(e){cat("ERROR :", conditionMessage(e))}, '0')}
split5=bigURLsplit[[5]];Body5=pbmclapply(split5,SafeBody,mc.preschedule=T);save(Body5,file="Body5.RData");rm(split5)
split6=bigURLsplit[[6]];Body6=pbmclapply(split6,SafeBody,mc.preschedule=T);save(Body6,file="Body6.RData");rm(split6)
split7=bigURLsplit[[7]];Body7=pbmclapply(split7,SafeBody,mc.preschedule=T);save(Body7,file="Body7.RData");rm(split7)
split8=bigURLsplit[[8]];Body8=pbmclapply(split8,SafeBody,mc.preschedule=T);save(Body8,file="Body8.RData");rm(split8)
split9=bigURLsplit[[9]];Body9=pbmclapply(split9,SafeBody,mc.preschedule=T);save(Body9,file="Body9.RData");rm(split9)
SafeBody = function (url){
tryCatch({
doc=getURLContent(url)
doc = htmlParse(doc)
body = xpathSApply(doc, "//div[@class='field-body'][1]", xmlValue)
body =  gsub('\nNotes\n.*', '', body)
body =  gsub("\n", ' ', body)
body=trimws(body)
Sys.sleep(.25)
return(body)},
error=function(e){cat("ERROR :", conditionMessage(e))}, '0')}
SafeBody = function (url){
tryCatch({
doc=getURLContent(url)
doc = htmlParse(doc)
body = xpathSApply(doc, "//div[@class='field-body'][1]", xmlValue)
body =  gsub('\nNotes\n.*', '', body)
body =  gsub("\n", ' ', body)
body=trimws(body)
Sys.sleep(.2)
return(body)},
error=function(e){cat("ERROR :", conditionMessage(e))}, '0')}
SafeBody = function (url){
tryCatch({
doc=getURLContent(url)
doc = htmlParse(doc)
body = xpathSApply(doc, "//div[@class='field-body'][1]", xmlValue)
body =  gsub('\nNotes\n.*', '', body)
body =  gsub("\n", ' ', body)
body=trimws(body)
Sys.sleep(.02)
return(body)},
error=function(e){cat("ERROR :", conditionMessage(e))}, '0')}
SafeBody = function (url){
tryCatch({
doc=getURLContent(url)
doc = htmlParse(doc)
body = xpathSApply(doc, "//div[@class='field-body'][1]", xmlValue)
body =  gsub('\nNotes\n.*', '', body)
body =  gsub("\n", ' ', body)
body=trimws(body)
Sys.sleep(.01)
return(body)},
error=function(e){cat("ERROR :", conditionMessage(e))}, '0')}
split9=bigURLsplit[[9]];Body9=pbmclapply(split9,SafeBody,mc.preschedule=T);save(Body9,file="Body9.RData");rm(split9)
split10=bigURLsplit[[10]];Body10=pbmclapply(split10,SafeBody,mc.preschedule=T);save(Body10,file="Body10.RData");rm(split10)
split11=bigURLsplit[[11]];Body11=pbmclapply(split11,SafeBody,mc.preschedule=T);save(Body11,file="Body11.RData");rm(split11)
Body11
load(file="Body1.RData");load(file="Body2.RData");load(file="Body3.RData");load(file="Body4.RData");load(file="Body5.RData");load(file="Body6.RData");load(file="Body7.RData");load(file="Body8.RData");load(file="Body9.RData");load(file="Body10.RData");load(file="Body11.RData");
Bodys_list=as.list(c(Body1,Body2,Body3,Body4,Body5,Body6,Body7,Body8,Body9,Body10,Body11));rm(Body1,Body2,Body3,Body4,Body5,Body6,Body7,Body8,Body9,Body10,Body11);
body_count=pbmclapply(body_vector, SafeBody_Count, mc.preschedule=T)
SafeBody_Count = function (url){
tryCatch({
body_count=gregexpr("[[:alpha:]]+", Bodys_list), function(x) sum(x > 0))
return(body_count)},
error=function(e){cat("ERROR :", conditionMessage(e))}, '0')}
SafeBody_Count = function (text){
tryCatch({
body_count=gregexpr(("[[:alpha:]]+", text), function(x) sum(x > 0))
return(body_count)},
error=function(e){cat("ERROR :", conditionMessage(e))}, '0')}
SafeBody_Count = function (text){
tryCatch({
body_count=gregexpr(("[[:alpha:]]+", text), function(x) sum(x > 0))
return(body_count))},
error=function(e){cat("ERROR :", conditionMessage(e))}, '0')}
SafeBody_Count = function (text){
tryCatch({
body_count=gregexpr(text, function(x) sum(x > 0))
return(body_count)},
error=function(e){cat("ERROR :", conditionMessage(e))}, '0')}
body_count=pbmclapply(gregexpr("[[:alpha:]]+",Bodys_list), SafeBody_Count, mc.preschedule=T)
View(body_count)
SafeBody_Count = function (text){
tryCatch({
body_count=(text, function(x) sum(x > 0))
return(body_count)},
error=function(e){cat("ERROR :", conditionMessage(e))}, '0')}
