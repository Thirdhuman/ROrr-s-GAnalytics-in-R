names(scholars)[names(scholars) == 'users.names'] ='name.twitter'
names(scholars)[names(scholars) == 'users.IDs'] ='ID.twitter'
names(scholars)[names(scholars) == 'users.screennames'] ='handle.twitter'
website.names = list()
for(i in seq_along(scholars$name.twitter)){
temp=scholars$name.twitter[i]
website.names[i] = ClosestMatch2(temp, name_sample$author_full) }
scholars$name.website=website.names
scholars=as.data.frame(scholars)
i <- sapply(scholars, is.factor)
scholars[i] <- lapply(scholars[i], as.character)
scholars$name.website=unlist(scholars$name.website)
scholars$title_category_1 = NA
scholars$category_1 = NA
scholars$title_category_2 = NA
scholars$category_2 = NA
scholarstitle_category_3 = NA
scholars$category_3 = NA
scholars$title_category_4 = NA
scholars$category_4 = NA
scholars$title_category_5 = NA
scholars$category_5 = NA
str(scholars)
write.csv(scholars, "Cato_Scholars.csv")
setwd("~/Desktop/Welfare_Policy/Data/Data_Explorations/Google_Analytics(Cato)")
# Fonts
library(extrafont)
font_import()
getwd()
# My Packages
library(googleAnalyticsR)
library(dplyr)
library(httr)
library(RCurl)
library(XML)
library(foreach)
library(stringr)
library(ggplot2)
library(data.table)
library(stringdist)
library(pbmcapply)
#library(plyr)
## Define Functions ##
##########################################################################################
###################################### Begin script ######################################
##########################################################################################
# Define Date
current_date=format(Sys.time(), "%Y-%m-%d")
current_date=as.Date(current_date)
# Open Google Analytics
account_list <- ga_account_list()
ga_id <- account_list$viewId[1]
cato_scholars=read.csv('Cato_Scholars.csv')
# Choose person(s) of interest
targets = cato_scholars %>% filter(str_detect(name.website, 'Vanessa'))
name=targets$name.website
name=as.character(name)
last_name=str_extract(name,'[^ ]+$')
cato_scholars$name.website == name & is.na( c(cato_scholars$category_1,cato_scholars$category_2,cato_scholars$category_3, cato_scholars$category_4,cato_scholars$category_5))
cato_scholars
# Vanessa B. Calder Categories
category_1=c('housing', 'carson', 'zoning', 'hud','landuse','lihtc','homeownership','mortgage','building')
category_2=c('women', 'family', 'leave','gender','gap')
category_3=c(NA)
category_4=c(NA)
category_5=c(NA)
title_category_1=c("Women's Issues")
title_category_2=c("Housing")
title_category_3=c(NA)
title_category_4=c(NA)
title_category_5=c(NA)
## Generate
unique(df_final$co_authors)
setwd("~/Desktop/Welfare_Policy/Data/Data_Explorations/Google_Analytics(Cato)")
# Fonts
library(extrafont)
font_import()
getwd()
# My Packages
library(googleAnalyticsR)
library(dplyr)
library(httr)
library(RCurl)
library(XML)
library(foreach)
library(stringr)
library(ggplot2)
library(data.table)
library(stringdist)
library(pbmcapply)
#library(plyr)
## Define Functions ##
##########################################################################################
###################################### Begin script ######################################
##########################################################################################
# Define Date
current_date=format(Sys.time(), "%Y-%m-%d")
current_date=as.Date(current_date)
# Open Google Analytics
account_list <- ga_account_list()
ga_id <- account_list$viewId[1]
cato_scholars=read.csv('Cato_Scholars.csv')
# Choose person(s) of interest
targets = cato_scholars %>% filter(str_detect(name.website, 'Vanessa'))
name=targets$name.website
name=as.character(name)
last_name=str_extract(name,'[^ ]+$')
# view id of your Google Analytics view where 1 conversion = visit
vid <- "3016983"
# Establish date range
from <- "2014-06-30"
from <- "2018-06-01"
to   <- as.character(current_date)
## create filters on dimensions
dimf <- dim_filter("dimension1","PARTIAL", expressions=name,not = F, caseSensitive = F)
dimf2 <- dim_filter("countryIsoCode","EXACT","US",not = F)
fc2 <- filter_clause_ga4(list(dimf #,dimf2
), operator = "OR")
#### Construct File Name ####
from_s = (from)
from_m = as.character(from)
from_y=str_sub(from, start=3, end = 4)
from_m=str_sub(from, start=6, end = 7)
to_y=str_sub(to, start=3, end = 4)
to_m=str_sub(to, start=6, end = 7)
analysis_range=paste0("(",from_m,from_y,'-',to_m,to_y,")")
initials <- function(a, b){
a <- str_split(a, "&")
a1 <- lapply(a, function(x){
x1 <- str_split(str_trim(x), " ")
paste0(unlist(lapply(x1, str_sub, 1, 2)), collapse="")	})
paste0(unlist(a1), b) }
analysis_identifier=initials(name,analysis_range)
#### Specify Search terms ####
max = 50000000
met = c("sessions", #"pageviews",
'timeOnPage','avgTimeOnPage',
"entrances","bounces", 'exitRate')
dim = c("date",
"ga:dimension1", 'channelGrouping',# 'city', 'region',
#'ga:dimension2',
'pagePath')
lst <- sapply(str_extract_all(name), function(x) substr(x, 0, 2))
#### Launch Google Analytic Retrieval Function ####
df2 = data.frame()
get_data=function(vid,from,to,dim,met,max){df=google_analytics(
viewId=vid,date_range=c(from,to),metrics=met,dimensions=dim, #met_filters = fc,
dim_filters = fc2,  max = max	,anti_sample = TRUE)
# clean up and set class
df$dimension1 = gsub('O&#039;Toole', "O'Toole", df$dimension1)
df$author_full=df$dimension1
df$dimension1 <- NULL
df$author=name
df$co_authors = gsub(name, '', df$author_full)
df$co_authors = gsub("^,*|(?<=,),|,*$", "", df$co_authors, perl=T)
df$co_authors=gsub(', , ', ', ', df$co_authors)
df$co_authors=trimws(df$co_authors)
df$collaboration_yn=ifelse(df$author==df$author_full,"Sole Author",
ifelse(df$author!=df$author_full|!is.na(df$co_authors),"Co-Authored",0))
df$ID <- paste0(sapply(lst, function(x) paste(x, collapse = '')), df$Year)
df}
gadata=get_data(vid=vid, from=from, to=to, dim=dim, met=met, max=max)
save(gadata, file = "Last_Raw_GA_DAT.RData")
#######
load( file = "Last_Raw_GA_DAT.RData")
#######
df1 = as.data.frame(gadata)
rm(gadata)
#####################################################
#### Initialize Cleanup of Google Analytics Data ####
#####################################################
df1$obs_day=as.Date(df1$date)
df1$date<-NULL
#  Remove Popular Proxy Strings
df1 <- df1[!grepl("search/srpcache", df1$pagePath),]
df1 <- df1[!grepl("www.filterbypass.me", df1$pagePath),]
df1 <- df1[!grepl("wikipedia.org/secure", df1$pagePath),]
df1 <- df1[!grepl("www.googleadservices.com", df1$pagePath),]
df1 <- df1[!grepl("bit.ly", df1$pagePath),]
df1 <- df1[!grepl("j.mp", df1$pagePath),]
df1 <- df1[!grepl("nl.hideproxy.me", df1$pagePath),]
df1 <- df1[!grepl("cc.bingj.com", df1$pagePath),]
df1 <- df1[!grepl("prolegis/getfile", df1$pagePath),]
df1 <- df1[!grepl("cluster23-files.instructure", df1$pagePath),]
df1 <- df1[!grepl("rorr.im/reddit.com", df1$pagePath),]
df1 <- df1[!grepl("www.duplichecker.com", df1$pagePath),]
df1 <- df1[!grepl("copyscape", df1$pagePath),]
df1 <- df1[!grepl("us1.proxysite", df1$pagePath),]
df1 <- df1[!grepl("eveil.alize", df1$pagePath),]
df1 <- df1[!grepl("honyaku.yahoofs.jp", df1$pagePath),]
df1 <- df1[!grepl("ow.ly", df1$pagePath),]
df1 <- df1[!grepl("searchenginereports.net", df1$pagePath),]
df1 <- df1[!grepl("xitenow", df1$pagePath),]
df1 <- df1[!grepl("cato.us1.list-manage.com/track/click", df1$pagePath),]
# More Reshaping of Page Paths & Remove Trailing Strings #
df1$pagePath2= gsub(".*www.cato.org", "www.cato.org", df1$pagePath)
df1$pagePath2= gsub(pattern="[?].*","",x=df1$pagePath2)
df1$pagePath2= gsub(pattern=".*https://*|&.*","",x=df1$pagePath2)
df1$pagePath2= gsub(pattern=".*genius.it/*|&.*",replacement="",x=df1$pagePath2)
df1$pagePath2= gsub(".*www-cato-org","www.cato.org",df1$pagePath2,perl=TRUE)
df1$pagePath2= gsub(".*www.cato.org.*?/publications","www.cato.org/publications",df1$pagePath2,perl=TRUE)
df1$pagePath2= gsub("\\.myaccess.library.utoronto.ca", "", df1$pagePath2, perl=TRUE)
df1$pagePath2= gsub("proxy.earlham.edu", "www.cato.org", df1$pagePath2, perl=TRUE)
df1$pagePath2= gsub("object.cato.org", "www.cato.org", df1$pagePath2, perl=TRUE)
df1$pagePath2= gsub("seekingalpha.com", "www.cato.org", df1$pagePath2, perl=TRUE)
df1$pagePath2= gsub(".ezproxy.wallawalla.edu", "", df1$pagePath2, perl=TRUE)
df1$pagePath2= gsub(".stfi.re", "", df1$pagePath2, perl=TRUE)
df1$pagePath2= gsub(".helin.uri.edu", "", df1$pagePath2, perl=TRUE)
df1$pagePath2= gsub(".proxy.lib.pdx.edu", "", df1$pagePath2, perl=TRUE)
df1$pagePath2= gsub("www.cato.org:80", "www.cato.org", df1$pagePath2, perl=TRUE) # Index.html
df1$pagePath2= gsub("www.cato-at-liberty.org", "www.cato.org/blog", df1$pagePath2, perl=TRUE) # Index.html
df1$pagePath2= gsub("www.cato/", "www.cato.org/", df1$pagePath2, perl=TRUE) # Index.html
df1$pagePath2= gsub("index.html", "", df1$pagePath2, perl=TRUE)
df1$pagePath2= gsub(".jpllnet.sfsu.edu", "", df1$pagePath2, perl=TRUE)
df1$pagePath2=gsub("what-have-the-politicians-in-washington-given-us/","what-have-politicians-washington-given-us",df1$pagePath2)
df1$pagePath2= gsub(".ezproxy.csusm.edu", "", df1$pagePath2, perl=TRUE) # Index.html
df1$pagePath2= gsub("proxy.unfake.us/proxy/350/", "www.cato.org/blog/", df1$pagePath2, perl=TRUE) # Index.html
df1$pagePath2=ifelse(grepl("php$", df1$pagePath2)==T, df1$pagePath, df1$pagePath2)
refcols <- c("obs_day", 'pagePath', 'pagePath2')
df1 <- df1[, c(refcols, setdiff(names(df1), refcols))]
df1$pagePath1=df1$pagePath
df1$pagePath=df1$pagePath2
df1$pagePath2=NULL
#####################################################
################ Scrape Cato Web Data ###############
#####################################################
df_final= data.frame()
web_df= data.frame()
df1$ID <- seq.int(nrow(df1))
url_vector_full=df1[["pagePath"]]
url_vector=unique(url_vector_full)
SafeGet = function (x)	{
tryCatch({
#	short_url_vector
html=GET(x)
parsed=htmlParse(html)
root=xmlRoot(parsed)
title = xpathSApply(root, "//h1[@class='page-h1'][1]", xmlValue)
return(title)},
error=function(e){cat("ERROR :", conditionMessage(e))}, '0')}
website_responses <- pbmclapply(url_vector, SafeGet, mc.preschedule=T)
title=trimws(website_responses)
link_df=as.data.frame(cbind(title=title, pagePath=url_vector))
link_df_full=as.data.frame(cbind(pagePath=url_vector_full))
linked_title= merge(link_df_full, link_df, by=('pagePath'), all.x=T)
save(title, file = "Title_Vector.RData")
#######
load( file = "Title_Vector.RData")
linked_title=unique(linked_title)
df_intermediate = merge(df1, linked_title, by.x = 'pagePath', by.y = 'pagePath', all.x=T)
type_list <- pbmclapply(url_vector, function(url){
type = gsub('www.cato.org*/|/.*', "\\1", url)
type = gsub('-', " ", type)
type_2 = gsub('www.cato.org/publications*/|/.*', "\\1", url)
type_2 = gsub('-', " ", type_2)
type=ifelse((type=="publications"), type_2, type)
})
type_df=data.frame(cbind(type=type_list))
type_df=as.data.frame(cbind(type=type_list, pagePath=url_vector))
type_df_full=as.data.frame(cbind(pagePath=url_vector_full))
linked_type= merge(type_df_full, type_df, by=('pagePath'), all.x=T)
linked_type=unique(linked_type)
df_intermediate <- merge(df_intermediate, linked_type, by.x = 'pagePath', by.y = 'pagePath', all.x=T)
# Extract web content from Cato Website
df3= data.frame()
text_content <- df_intermediate %>%
distinct(pagePath, title, type)
text_content=text_content[!duplicated(text_content),]
text_url_vector=text_content[["pagePath"]]
text_responses <- pbmclapply(text_url_vector, GET)
body_vector = pbmclapply(text_responses, function (filename) {
doc = htmlParse(filename)
body = xpathSApply(doc, "//div[@class='field-body'][1]", xmlValue)
body =  gsub('\nNotes\n.*', '', body)
body =  gsub("\n", ' ', body)
body=trimws(body)})
body_count=pbmclapply(gregexpr("[[:alpha:]]+", body_vector), function(x) sum(x > 0))
pub_date_output = pbmclapply(text_responses, function (filename) {
doc = htmlParse(filename)
pub_date = xpathSApply(doc, "//meta[@name='publication_date'][1]",xmlGetAttr,'content')})
tags_output = pbmclapply(text_responses, function (filename) {
doc = htmlParse(filename)
tags = xpathSApply(doc, "//div[@class='field-tags inline']", xmlValue)
tags =  gsub("\n", ' ', tags)
tags=trimws((tags))})
topics_output = pbmclapply(text_responses, function (filename) {
doc = htmlParse(filename)
topics = xpathSApply(doc, "//div[@class='field-topics inline']", xmlValue)
topics =  gsub("\n", ' ', topics)
topics=trimws((topics))})
text_df=data.frame(cbind(body=body_vector,body_count=body_count,topics=topics_output,tags=tags_output,pub_date=pub_date_output ))
text_stats <- cbind(text_content, text_df)
# Text Analysis	- Generate Text Wall
text_wall <- text_df %>%
distinct(title, body,tags)
text_wall=text_wall[!duplicated(text_wall),]
for(i in 1:nrow(text_content)){
if (i==1){save_docs=paste(text_wall$title[i],text_wall$body[i],as.character(text_wall$tags[i]))}
else{save_docs = paste(save_docs,text_wall$title[i],text_wall$body[i],as.character(text_wall$tags[i]))}
}
library(tm)
library(wordcloud)
library(topicmodels)
library(quanteda)
toSpace <- content_transformer(function (x , pattern ) gsub(pattern, " ", x))
toNothing <- content_transformer(function (x , pattern ) gsub(pattern, "", x))
text_stats$row_count = NULL
## Text Analysis - Top Terms ##
for(k in 1:nrow(text_stats)){
keywords_doc = paste(text_stats$title[k],text_stats$body[k],text_stats$tags[k])
keywords_doc=Corpus(VectorSource(keywords_doc))
keywords_doc <- tm_map(keywords_doc, toSpace, "/")
keywords_doc <- tm_map(keywords_doc, toSpace, "@")
keywords_doc <- tm_map(keywords_doc, toSpace, "\\|")
keywords_doc <- tm_map(keywords_doc, toNothing, "-")
keywords_doc <- tm_map(keywords_doc, toNothing, "—")
keywords_doc <- tm_map(keywords_doc, toNothing, "–")
keywords_doc <- tm_map(keywords_doc, removeNumbers)
keywords_doc <- tm_map(keywords_doc, stripWhitespace)
keywords_doc <- tm_map(keywords_doc, removePunctuation)
keywords_doc <- tm_map(keywords_doc, removeWords, stopwords("english"))
keywords_doc <- tm_map(keywords_doc, removeWords, c("the", "can",'did','like', 'one', 'and', 'use', 'NA'))
dtm <- DocumentTermMatrix(keywords_doc)
dtm <- removeSparseTerms(dtm, 0.96)
top_terms=findMostFreqTerms(dtm, n = 20L)
top_terms=as.data.frame(do.call(rbind, top_terms))
text_stats$top_terms[k]=paste(colnames(top_terms)[1:15],sep="|-|", collapse=", ")
}
## Generate Author's Custom Categories ##
unique(text_stats$top_terms[1:50])
# Michael D. Tanner Categories
# category_1=c('poverty', 'welfare', 'zoning', 'tanf','prwora','snap','dole','racism', 'charity', 'dependency', 'antipoverty', 'poor', 'credit')
# category_2=c('social', 'security' ,'retirement', 'stocks', 'bonds')
# category_3=c('healthcare', 'security', 'medicare','medicaid', 'obamacare', 'aca', 'insurance', 'health')
# category_4=c('debt', 'entitlements','deficits', 'fiscal','liabilities', 'unfunded')
#Alex Nowrasteh Categories
# category_1=c('terrorist', 'terrorism', 'muslim', 'security')
# category_2=c('murder', 'crime','murdered', 'incarceration', 'prison','criminality')
# category_3=c('assimilation', 'generation','descendants', 'generations','vote')
# category_4=c('jobs', 'employment', 'worker','economic','bracero','workers', 'employmentbased','income', 'wage')
# category_5=c('benefits', 'debt', 'welfare','entitlements','deficits', 'fiscal')
if( cato_scholars$name.website == name & is.na( c(cato_scholars$category_1,cato_scholars$category_2)) ) {
cato_scholars$category_1 = category_1
cato_scholars$category_2 = category_2
cato_scholars$category_3 = category_3
cato_scholars$category_4 = category_4
cato_scholars$category_5 = category_5
cato_scholars$title_category_1 = title_category_1
cato_scholars$title_category_2 = title_category_2
cato_scholars$title_category_3 = title_category_3
cato_scholars$title_category_4 = title_category_4
cato_scholars$title_category_4 = title_category_5
}
if( cato_scholars$name.website == name & is.na(cato_scholars$category_1 | cato_scholars$category_2) ) {
cato_scholars$category_1 = category_1
cato_scholars$category_2 = category_2
cato_scholars$category_3 = category_3
cato_scholars$category_4 = category_4
cato_scholars$category_5 = category_5
cato_scholars$title_category_1 = title_category_1
cato_scholars$title_category_2 = title_category_2
cato_scholars$title_category_3 = title_category_3
cato_scholars$title_category_4 = title_category_4
cato_scholars$title_category_4 = title_category_5
}
if( cato_scholars$name.website == name & is.na(cato_scholars$category_1) & is.na(cato_scholars$category_2) ) {
cato_scholars$category_1 = category_1
cato_scholars$category_2 = category_2
cato_scholars$category_3 = category_3
cato_scholars$category_4 = category_4
cato_scholars$category_5 = category_5
cato_scholars$title_category_1 = title_category_1
cato_scholars$title_category_2 = title_category_2
cato_scholars$title_category_3 = title_category_3
cato_scholars$title_category_4 = title_category_4
cato_scholars$title_category_4 = title_category_5
}
View(cato_scholars)
category_1=c('housing', 'carson', 'zoning', 'hud','landuse','lihtc','homeownership','mortgage','building')
category_2=c('women', 'family', 'leave','gender','gap')
category_3=c(NA)
category_4=c(NA)
category_5=c(NA)
title_category_1=c("Women's Issues")
title_category_2=c("Housing")
title_category_3=c(NA)
title_category_4=c(NA)
title_category_5=c(NA)
cato_scholars$name.website == name & is.na(cato_scholars$category_1) & is.na(cato_scholars$category_2) )
cato_scholars$name.website == name & is.na(cato_scholars$category_1) & is.na(cato_scholars$category_2)
if( cato_scholars$name.website == name & is.na(cato_scholars$category_1) == T & is.na(cato_scholars$category_2) == T ) {
cato_scholars$category_1 = category_1
cato_scholars$category_2 = category_2
cato_scholars$category_3 = category_3
cato_scholars$category_4 = category_4
cato_scholars$category_5 = category_5
cato_scholars$title_category_1 = title_category_1
cato_scholars$title_category_2 = title_category_2
cato_scholars$title_category_3 = title_category_3
cato_scholars$title_category_4 = title_category_4
cato_scholars$title_category_4 = title_category_5
}
if( cato_scholars$name.website == name #& is.na(cato_scholars$category_1) == T & is.na(cato_scholars$category_2) == T
) {
cato_scholars$category_1 = category_1
cato_scholars$category_2 = category_2
cato_scholars$category_3 = category_3
cato_scholars$category_4 = category_4
cato_scholars$category_5 = category_5
cato_scholars$title_category_1 = title_category_1
cato_scholars$title_category_2 = title_category_2
cato_scholars$title_category_3 = title_category_3
cato_scholars$title_category_4 = title_category_4
cato_scholars$title_category_4 = title_category_5
}
cato_scholars$category_1[cato_scholars$name.website == name & is.na( c(cato_scholars$category_1) = category_1]
cato_scholars$category_1[cato_scholars$name.website == name & is.na(cato_scholars$category_1) = category_1]
cato_scholars$category_1[cato_scholars$name.website == name & is.na(cato_scholars$category_1),] = category_1
View(cato_scholars)
cato_scholars[cato_scholars$name.website == name & is.na(cato_scholars$category_1),] = category_1
View(cato_scholars)
cato_scholars$category_1[cato_scholars$name.website == name & is.na(cato_scholars$category_1),] = category_1
cato_scholars$name.website == name
cato_scholars$name.website == name & is.na(cato_scholars$category_1)
cato_scholars[cato_scholars$name.website == name & is.na(cato_scholars$category_1), c(category_1)] = category_1
cato_scholars[cato_scholars$name.website == name & is.na(cato_scholars$category_1), c(cato_scholars$category_1)] = category_1
category_1=c('housing', 'carson', 'zoning', 'hud','landuse','lihtc','homeownership','mortgage','building')
category_2=c('women', 'family', 'leave','gender','gap')
category_3=c(NA)
category_4=c(NA)
category_5=c(NA)
title_category_1=c("Women's Issues")
title_category_2=c("Housing")
title_category_3=c(NA)
title_category_4=c(NA)
title_category_5=c(NA)
## Generate
unique(df_final$co_authors)
cato_scholars[cato_scholars$name.website == name & is.na(cato_scholars$category_1), c(cato_scholars$category_1)] = category_1
cat_1=c('housing', 'carson', 'zoning', 'hud','landuse','lihtc','homeownership','mortgage','building')
cat_2=c('women', 'family', 'leave','gender','gap')
cat_3=c(NA)
cat_4=c(NA)
cat_5=c(NA)
title_cat_1=c("Women's Issues")
title_cat_2=c("Housing")
title_cat_3=c(NA)
title_cat_4=c(NA)
title_cat_5=c(NA)
cato_scholars[name.website == name & is.na(category_1), c(category_1)] = cat_1
cato_scholars[cato_scholars$name.website == name & is.na(cato_scholars$category_1), c(cato_scholars$category_1)] = category_1
cato_scholars[cato_scholars$name.website==name&is.na(cato_scholars$category_1)==T,(cato_scholars$category_1)] = category_1
cato_scholars[cato_scholars$name.website==name&is.na(cato_scholars$category_1)==T,(cato_scholars$category_1)]=category_1
cato_scholars[cato_scholars$name.website==name,(cato_scholars$category_1)]=category_1
cato_scholars[cato_scholars$name.website==name,(cato_scholars$category_1)]=category_1
name
cato_scholars$name.website
cato_scholars$name.website==name
cato_scholars[cato_scholars$name.website==name,(cato_scholars$category_1)]=category_1
cato_scholars$category_1 = ifelse(cato_scholars$name.website==name&is.na(cato_scholars$category_1, category_1)
)
cato_scholars$category_1 = ifelse(cato_scholars$name.website==name&is.na(cato_scholars$category_1, category_1, NA)
cato_scholars$category_1 = ifelse(cato_scholars$name.website==name&is.na(cato_scholars$category_1), category_1, NA)
View(cato_scholars)
cato_scholars$category_1 = ifelse(cato_scholars$name.website==name&is.na(cato_scholars$category_1),category_1, category_1)
View(cato_scholars)
cato_scholars$category_1 = ifelse(cato_scholars$name.website==name&is.na(cato_scholars$category_1),category_1, NA)
View(cato_scholars)
cato_scholars$category_1 = ifelse(cato_scholars$name.website==name&is.na(cato_scholars$category_1),category_1, NA)
View(cato_scholars)
cato_scholars$category_1 = ifelse(cato_scholars$name.website==name&is.na(cato_scholars$category_1),list(category_1), NA)
View(cato_scholars)
cato_scholars$category_1 = ifelse(cato_scholars$name.website==name&is.na(cato_scholars$category_1),list(category_1), NA)
View(cato_scholars)
cato_scholars$category_1 = ifelse(cato_scholars$name.website==name&is.na(cato_scholars$category_1),list(category_1), cato_scholars$category_1)
View(cato_scholars)
cato_scholars$category_1=ifelse(cato_scholars$name.website==name&is.na(cato_scholars$category_1),list(category_1),cato_scholars$category_1)
cato_scholars$category_2=ifelse(cato_scholars$name.website==name&is.na(cato_scholars$category_2),list(category_2),cato_scholars$category_2)
cato_scholars$category_3=ifelse(cato_scholars$name.website==name&is.na(cato_scholars$category_3),list(category_3),cato_scholars$category_3)
cato_scholars$category_4=ifelse(cato_scholars$name.website==name&is.na(cato_scholars$category_4),list(category_4),cato_scholars$category_4)
cato_scholars$category_5=ifelse(cato_scholars$name.website==name&is.na(cato_scholars$category_5),list(category_5),cato_scholars$category_5)
cato_scholars$title_category_1=ifelse(cato_scholars$name.website==name&is.na(cato_scholars$title_category_1),list(title_category_1),cato_scholars$title_category_1)
cato_scholars$title_category_2=ifelse(cato_scholars$name.website==name&is.na(cato_scholars$title_category_2),list(title_category_2),cato_scholars$title_category_2)
cato_scholars$title_category_3=ifelse(cato_scholars$name.website==name&is.na(cato_scholars$title_category_3),list(title_category_3),cato_scholars$title_category_3)
cato_scholars$title_category_4=ifelse(cato_scholars$name.website==name&is.na(cato_scholars$title_category_4),list(title_category_4),cato_scholars$title_category_4)
cato_scholars$title_category_5=ifelse(cato_scholars$name.website==name&is.na(cato_scholars$title_category_5),list(title_category_5),cato_scholars$title_category_5)
View(cato_scholars)
write.csv(cato_scholars, "Cato_Scholars.csv")
library(xlsx)
install.packages("xlsx")
library(xlsx)
install.packages("openxlsx")
library(openxlsx)
write.xlsx(cato_scholars, "Cato_Scholars.xlsx")
cato_scholars=read.xlsx('Cato_Scholars.xlsx')
unique(text_stats$top_terms[1:50])
if(cato_scholars$name.website==name&is.na(cato_scholars$category_1)){stop}
print(name)
# Michael D. Tanner Categories
unique(text_stats$top_terms[1:50])
if(is.na(cato_scholars$category_1)){stop}
print(name)
if(is.na(cato_scholars$category_1)){stop}
cato_scholars$name.website==name)
if(cato_scholars$name.website==name){stop}
ifelse(cato_scholars$name.website==name&is.na(cato_scholars$category_1), stop, continue )
unique(text_stats$top_terms[1:50])
stopifnot(cato_scholars$name.website==name&is.na(cato_scholars$category_1))
print(name)
print("this is the last message")
stop()
print("you should not see this")
